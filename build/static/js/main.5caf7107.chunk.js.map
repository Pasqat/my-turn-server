{"version":3,"sources":["GlobalStyles.js","components/hooks/useLocalStorageState.js","components/Header/Icon.jsx","components/Header/ThemeModeIcon.jsx","components/Header/Header.jsx","components/tooltip/tooltip.js","utils/storage.js","services/teams.js","components/modal/Modal.styles.js","components/hooks/useMediaQuery.js","components/acceptedShiftLegend/acceptedShiftLegend.js","components/Sidebar.jsx","components/utils/calendar.js","components/calendar/bigCalendar-style.jsx","components/hooks/useDate/Constants.js","components/hooks/useDate/utility.js","components/hooks/useDate/useDate.js","services/scheduledTime.js","components/calendar/addNewRowModal.jsx","components/calendar/BigCalendar.jsx","components/Main.jsx","services/login.js","components/notification/notification-style.js","components/notification/Notification.jsx","components/loginForm/loginForm-styles.js","components/loginForm/LoginForm.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","props","theme","css","useLocalStorageState","key","defaultValue","serialize","JSON","stringify","deserialize","parse","prevKeyRef","useRef","useState","valuesToLocalStorage","window","localStorage","getItem","state","setState","useEffect","prevKey","current","removeItem","setItem","styled","svg","attrs","version","xmlns","xmlnsXlink","Svg","Icon","Sun","className","viewBox","fill","width","height","x","y","transform","d","Moon","StyledHeader","div","H2","h2","Link","Button","Header","switchTheme","setUser","setTheme","onClick","Tooltip","TooltipText","span","storageKey","loadUser","user","headers","Authorization","token","baseUrl","getAll","a","axios","get","response","data","register","credential","post","getAcceptedShift","storage","addAcceptedShift","newAcceptedShift","put","ModalContainer","ModalForm","form","ModalInput","input","ModalSelectInput","select","ModalButton","button","ModalButtonAdd","ModalButtonClose","ModalBackground","useMediaQuery","query","React","matches","setMatches","media","matchMedia","listener","addEventListener","removeEventListener","Legend","LegendItem","ItemDot","color","AddItem","AcceptedSchiftLegend","acceptedShift","setAcceptedShift","shiftName","setShiftName","setColor","hours","setHours","isOpen","setIsOpen","isPageWide","handleSubmitNewShift","event","preventDefault","length","alert","findIndex","element","teamService","newObject","console","log","maxAcceptedShift","map","_id","style","fontWeight","onSubmit","type","name","value","placeholder","onChange","target","required","min","max","display","StyledSideBar","Spacer","Sidebar","coloredDiv","turn","find","shift","TableContent","Frame","Calendar","ButtonPrimary","isEditable","ButtonSecondary","Day","isToday","isSelected","Table","table","TableHead","thead","TableRow","tr","TableCell","td","TableCellHeader","th","Names","DeleteButton","DAYS","DAYS_LEAP","MONTHS","getStartDayOfMonth","date","Date","getFullYear","getMonth","getDay","isLeapYear","year","updateDate","day","getDate","month","startDay","actionTypes","dateReducer","payload","newDate","setStartday","Error","today","initialState","useDate","reducer","useReducer","dispatch","days","nextMonth","previousMonth","request","getYear","addNewMember","update","id","removeTeamMember","delete","AddNewRowModal","setTurns","turns","setName","handleSubmit","newMember","scheduleService","addedMember","BigCalendar","setIsEditable","then","putValuesToTable","worker","monthLenght","children","removeRow","i","push","cycleThrougShifts","putValuesToTableMobile","shiftNames","concat","workerId","scheduleIndex","schedule","acceptedShiftIndex","index","newScheduledDays","idToDelete","newWorkerTeam","filter","confirm","toUpperCase","Array","_","marginLeft","justifyContent","alignContent","marginTop","marginBottom","StyledMain","Main","backgroundColor","login","NotificationStyled","Notification","notification","message","ContainerLogin","WrapLogin","FormLogin","FormTitle","WrapInput","Input","WrapButton","TextCenter","LoginForm","teamName","setTeamName","password","setPassword","email","setEmail","setNotification","isLogin","setIsLogin","validEmailRegex","RegExp","validateForm","isValid","test","setTimeout","handleLogin","loginService","team","handleRegister","borderTop","paddingTop","StyledApp","App","passedTheme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5caf7107.chunk.js","sourcesContent":["import { createGlobalStyle, css } from \"styled-components\"\n\n// GlobalStyle Component\n// to attach CSS-variables\n// to html\nexport const GlobalStyles = createGlobalStyle`\n${(props) => {\n        if (props.theme === \"light\") {\n            return css`\n            html {\n                --color-text: #595e77;\n                --color-text-light: #c6c9df;\n                --color-background: #fff;\n                --gradient-background: linear-gradient(\n                    to bottom,\n                    rgba(255, 255, 255, 0.15),\n                    rgb(234, 228, 255, 0.15)\n                );\n                --background-main: rgba(0, 0, 0, 0);\n                --color-header-background: #e8edff;\n                --color-primary: #4bbced;\n                --color-secondary: #fcd173;\n                --color-blue1: #4bbced;\n                --color-yellow1: #fcd173;\n                --color-orange1: #eb7b52;\n                --color-green1: #43b34f;\n                --color-border: 2px solid rgb(240, 246, 247);\n                --color-selected: #e8edff;\n            }\n        `\n        } else if (props.theme === \"dark\") {\n            return css`\n            html {\n                --color-text: #595e77;\n                --color-text-light: #3e4157;\n                --color-background: #292b3f;\n                --gradient-background: linear-gradient(\n                    to bottom,\n                    rgb(41, 43, 63, 0.15),\n                    rgb(51, 38, 57, 0.15)\n                );\n                --background-main: rgba(71, 70, 91, 0.25);\n                --color-header-background: #1d1d31;\n                --color-primary: #1099a2;\n                --color-secondary: #b19053;\n                --color-blue1: #1099a2;\n                --color-yellow1: #b19053;\n                --color-orange1: #b16550;\n                --color-green1: #3c973f;\n                --color-border: 2px solid #37394e;\n                --color-selected: #3a3a51;\n            }\n        `\n        }\n    }}\n\nbody {\n    height: 100%;\n    background: var(--color-background);\n    background-repeat: no-repeat;\n    color: var(--color-text);\n    overflow-x: hidden;\n    margin: 0;\n  font-family: 'Lato', 'Roboto', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  }\n\n * {\n     margin: 0;\n     box-sizing: border-box;}\n`\n","import { useRef, useEffect, useState } from \"react\"\n\nconst useLocalStorageState = (\n    key,\n    defaultValue = \"\",\n    { serialize = JSON.stringify, deserialize = JSON.parse } = {}\n) => {\n    const prevKeyRef = useRef(key) // useRef to not rerender\n\n    const [state, setState] = useState(() => {\n        const valuesToLocalStorage = window.localStorage.getItem(key)\n        if (valuesToLocalStorage) {\n            return deserialize(valuesToLocalStorage)\n        }\n        return typeof defaultValue === \"function\"\n            ? defaultValue()\n            : defaultValue\n    })\n\n    useEffect(() => {\n        const prevKey = prevKeyRef.current\n        if (prevKey !== key) {\n            window.localStorage.removeItem(prevKey)\n        }\n        prevKeyRef.current = key\n\n        window.localStorage.setItem(key, serialize(state))\n    }, [key, serialize, state])\n\n    return [state, setState]\n}\n\nexport default useLocalStorageState\n","import styled from \"styled-components\"\n\nexport default styled.svg.attrs({\n    version: \"1.1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n})``\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Icon from \"./Icon\"\n\nconst Svg = styled(Icon)`\n    width: 24px;\n    height: 24px;\n`\n\nexport const Sun = ({ className }) => (\n    <Svg viewBox=\"0 0 24 24\" className={className} fill=\"currentColor\">\n        <rect width=\"2\" height=\"2\" x=\"9\" y=\"2\"></rect>\n        <rect\n            width=\"2\"\n            height=\"2\"\n            x=\"13.88\"\n            y=\"4.051\"\n            transform=\"rotate(45.02 14.88 5.051)\"\n        ></rect>\n        <rect width=\"2\" height=\"2\" x=\"16\" y=\"9\"></rect>\n        <rect\n            width=\"2\"\n            height=\"2\"\n            x=\"13.949\"\n            y=\"14.019\"\n            transform=\"rotate(-135.02 14.95 15.019)\"\n        ></rect>\n        <rect width=\"2\" height=\"2\" x=\"9\" y=\"16\"></rect>\n        <rect\n            width=\"2\"\n            height=\"2\"\n            x=\"3.98\"\n            y=\"13.949\"\n            transform=\"rotate(-134.98 4.98 14.95)\"\n        ></rect>\n        <rect width=\"2\" height=\"2\" x=\"2\" y=\"9\"></rect>\n        <rect\n            width=\"2\"\n            height=\"2\"\n            x=\"4.05\"\n            y=\"4.121\"\n            transform=\"rotate(44.98 5.05 5.12)\"\n        ></rect>\n        <path d=\"M10,6 C7.8,6 6,7.8 6,10 C6,12.2 7.8,14 10,14 C12.2,14 14,12.2 14,10 C14,7.8 12.2,6 10,6 Z\" />\n    </Svg>\n)\n\nexport const Moon = ({ className }) => (\n    <Svg viewBox=\"0 0 24 24\" className={className} fill=\"currentColor\">\n        <path d=\"M8,2 C4.5,2.9 2,6.1 2,9.9 C2,14.4 5.6,18 10.1,18 C13.9,18 17,15.5 18,12 C11.9,13.7 6.3,8.1 8,2 Z\" />\n    </Svg>\n)\n","import React from \"react\"\nimport { useEffect } from \"react\"\nimport styled from \"styled-components\"\n\nimport useLocalStorageState from \"../hooks/useLocalStorageState\"\nimport { Sun, Moon } from \"./ThemeModeIcon\"\n\nconst StyledHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background: var(--color-background);\n    box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px;\n    padding: 10px 2rem;\n    color: var(--color-primary);\n    font-family: \"Raleway\", sans-serif;\n`\n\nconst H2 = styled.h2`\n    font-weight: 400;\n    font-size: 2rem;\n    margin: 0;\n`\n\nconst Link = styled.div`\n    font-size: 1.5rem;\n    text-decoration: none;\n    cursor: pointer;\n    color: var(--color-primary);\n`\n\nconst Button = styled.div`\n    cursor: pointer;\n    display: flex;\n    align-items: end;\n    margin-right: 1em;\n    margin-left: auto;\n    height: 100%;\n`\n\nconst Header = ({ switchTheme, setUser }) => {\n    const [theme, setTheme] = useLocalStorageState(\"theme\", \"dark\")\n\n    useEffect(() => {\n        switchTheme(theme)\n    }, [switchTheme, theme])\n\n    const logOut = () => {\n        window.localStorage.removeItem(\"loggedUser\")\n        return setUser(null)\n    }\n\n    return (\n        <StyledHeader>\n            <H2>My Turn</H2>\n            <Button\n                onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n            >\n                {theme === \"light\" ? <Moon /> : <Sun />}\n            </Button>\n            <div onClick={logOut}>\n                <Link>log-out</Link>\n            </div>\n        </StyledHeader>\n    )\n}\n\nexport default Header\n","import styled from \"styled-components\"\n\nexport const Tooltip = styled.div`\n    position: relative;\n`\n\nexport const TooltipText = styled.span`\n    visibility: hidden;\n    background-color: var(--color-header-background);\n    color: var(--color-primary);\n    font-weight: bold;\n    box-shadow: 2px 2px 1px rgb(0 0 0 / 30%);\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 10px;\n    position: absolute;\n    top: -2rem;\n    z-index: 9999;\n\n    ${Tooltip}:hover & {\n        visibility: visible;\n    }\n`\n","const storageKey = \"loggedUser\"\n\nconst saveUser = (user) =>\n    localStorage.setItem(storageKey, JSON.stringify(user))\n\nconst loadUser = () => JSON.parse(localStorage.getItem(storageKey))\n\nconst logoutUser = () => localStorage.removeItem(storageKey)\n\nconst getAxiosConfig = () => {\n    return {\n        headers: { Authorization: `bearer ${loadUser().token}` }\n    }\n}\n\nexport default {\n    saveUser,\n    loadUser,\n    logoutUser,\n    getAxiosConfig\n}\n","import axios from \"axios\"\nimport storage from \"../utils/storage.js\"\nconst baseUrl = \"/api/team\"\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst register = async (credential) => {\n    const response = await axios.post(baseUrl, credential)\n    return response.data\n}\n\nconst getAcceptedShift = async () => {\n    const response = await axios.get(\n        `${baseUrl}/accepted-shift/`,\n        storage.getAxiosConfig()\n    )\n    return response.data\n}\n\nconst addAcceptedShift = async (newAcceptedShift) => {\n    const response = await axios.put(\n        `${baseUrl}/accepted-shift/`,\n        newAcceptedShift,\n        storage.getAxiosConfig()\n    )\n    return response.data\n}\n\nexport default {\n    getAll,\n    register,\n    getAcceptedShift,\n    addAcceptedShift,\n}\n","import styled from \"styled-components\"\n\nexport const ModalContainer = styled.div`\n    background-color: var(--color-selected);\n    padding: 1rem;\n    border-radius: 5px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: flex;\n    z-index: 200;\n    box-shadow: 8px 8px 2px rgb(0 0 0 / 30%);\n`\n\nexport const ModalForm = styled.form`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const ModalInput = styled.input`\n    width: 100%;\n    padding: 0.5rem 1rem;\n    display: block;\n    background: 0 0;\n    color: var(--color-primary);\n    line-height: 1.2;\n    outline: none;\n    border: none;\n    border-bottom: 1px solid var(--color-background);\n    font-size: 1rem;\n    margin-bottom: 1rem;\n\n    &::placeholder {\n        color: var(--color-primary);\n    }\n`\n\nexport const ModalSelectInput = styled.select`\n    width: 100%;\n    padding: 0.5rem 1rem;\n    display: block;\n    background: 0 0;\n    color: var(--color-primary);\n    line-height: 1.2;\n    outline: none;\n    border: none;\n    border-bottom: 1px solid var(--color-background);\n    font-size: 1rem;\n    margin-bottom: 1rem;\n`\n\nexport const ModalButton = styled.button`\n    background: 0 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0 1.2rem;\n    width: 40%;\n    font-size: 1rem;\n    text-transform: uppercase;\n    cursor: pointer;\n    margin: 0 15px;\n    font-weight: bold;\n    transition: all 200ms;\n    border: none;\n`\n\nexport const ModalButtonAdd = styled(ModalButton)`\n    color: var(--color-green1);\n    :hover {\n        color: var(--color-primary);\n    }\n`\n\nexport const ModalButtonClose = styled(ModalButton)`\n    color: var(--color-text);\n    :hover {\n        color: var(--color-secondary);\n    }\n`\n\nexport const ModalBackground = styled.div`\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: var(--gradient-background);\n    backdrop-filter: blur(5px);\n    z-index: 199;\n    transition: all 500ms;\n`\n","import React from \"react\"\n\nexport function useMediaQuery(query) {\n    const [matches, setMatches] = React.useState(false)\n\n    React.useEffect(() => {\n        const media = window.matchMedia(query)\n        if (media.matches !== matches) {\n            setMatches(media.matches)\n        }\n\n        const listener = () => {\n            setMatches(media.matches)\n        }\n\n        media.addEventListener(\"change\", listener)\n\n        return () => media.removeEventListener(\"change\", listener)\n    }, [matches, query])\n\n    return matches\n}\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { Tooltip, TooltipText } from \"../tooltip/tooltip\"\nimport teamService from \"../../services/teams\"\nimport {\n    ModalForm,\n    ModalInput,\n    ModalButtonAdd,\n    ModalContainer,\n    ModalBackground,\n    ModalButtonClose,\n    ModalSelectInput,\n} from \"../modal/Modal.styles\"\n\nimport { useMediaQuery } from \"../hooks/useMediaQuery\"\n\nconst Legend = styled.div`\n    padding: 20px;\n    @media (max-width: 800px) {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-evenly;\n        flex-wrap: wrap;\n        padding-bottom: 0;\n    }\n`\n\nconst LegendItem = styled.div`\n    font-weight: bold;\n    display: flex;\n    align-items: center;\n    padding-bottom: 1rem;\n`\n\nconst ItemDot = styled.div`\n    width: 18px;\n    height: 18px;\n    margin-right: 10px;\n    border-radius: 50%;\n\n    ${(props) => {\n        return css`\n            background-color: var(${props.color});\n        `\n    }}}\n`\n\nconst AddItem = styled.div`\n    width: 100%;\n    background: var(--color-selected);\n    padding: 0px 10px;\n    font-weight: bold;\n    font-size: 1.8rem;\n    border-radius: 5px;\n    text-align: center;\n    cursor: pointer;\n`\nconst AcceptedSchiftLegend = ({ acceptedShift, setAcceptedShift }) => {\n    const [shiftName, setShiftName] = React.useState(\"\")\n    const [color, setColor] = React.useState(\"--color-blue1\")\n    const [hours, setHours] = React.useState(\"\")\n    const [isOpen, setIsOpen] = React.useState(false)\n\n    let isPageWide = useMediaQuery(\"(min-width: 800px)\")\n\n    const handleSubmitNewShift = async (event) => {\n        event.preventDefault()\n\n        if (shiftName.length <= 0 || color.length <= 0 || hours === 0)\n            return alert(\"You need to choose a name a color and a duration\")\n\n        if (\n            acceptedShift.findIndex(\n                (element) => element.shiftName === shiftName\n            ) !== -1\n        )\n            return alert(\"name must be unique\")\n\n        const newAcceptedShift = {\n            shiftName,\n            color,\n            hours,\n        }\n\n        const newObject = await teamService.addAcceptedShift([\n            ...acceptedShift,\n            newAcceptedShift,\n        ])\n        console.log(newObject)\n        setAcceptedShift(newObject.acceptedShift)\n        setIsOpen(!isOpen)\n    }\n\n    if (!acceptedShift) return <LegendItem>Loading...</LegendItem>\n\n    const maxAcceptedShift = acceptedShift.length === 8\n\n    return (\n        <Legend>\n            {acceptedShift.map((element) => {\n                console.log(element._id)\n                return (\n                    <LegendItem key={element._id}>\n                        <ItemDot color={element.color} />\n                        <Tooltip>\n                            {element.shiftName}\n                            {isPageWide ? (\n                                <TooltipText>{element.hours}h</TooltipText>\n                            ) : (\n                                <span style={{ fontWeight: \"initial\" }}>\n                                    {\" \"}\n                                    {element.hours}h\n                                </span>\n                            )}\n                        </Tooltip>\n                    </LegendItem>\n                )\n            })}\n            {!maxAcceptedShift ? (\n                <AddItem style={{}} onClick={() => setIsOpen(!isOpen)}>\n                    +\n                </AddItem>\n            ) : null}\n            {isOpen ? (\n                <ModalBackground>\n                    <ModalContainer>\n                        <ModalForm onSubmit={handleSubmitNewShift}>\n                            <ModalInput\n                                type=\"text\"\n                                name=\"shiftName\"\n                                value={shiftName}\n                                placeholder=\"shift name\"\n                                onChange={({ target }) =>\n                                    setShiftName(target.value)\n                                }\n                            />\n                            <ModalSelectInput\n                                value={color}\n                                onChange={({ target }) =>\n                                    setColor(target.value)\n                                }\n                                required\n                                placeholder=\"select color\"\n                            >\n                                <option value=\"--color-blue1\">Blue</option>\n                                <option value=\"--color-yellow1\">Yellow</option>\n                                <option value=\"--color-orange1\">Orange</option>\n                                <option value=\"--color-green1\">Green</option>\n                            </ModalSelectInput>\n                            <ModalInput\n                                type=\"number\"\n                                name=\"hours\"\n                                min=\"0\"\n                                max=\"24\"\n                                value={hours}\n                                placeholder=\"duration in hours\"\n                                onChange={({ target }) =>\n                                    setHours(target.value)\n                                }\n                            />\n                            <div style={{ display: \"flex\" }}>\n                                <ModalButtonClose\n                                    onClick={() => setIsOpen(!isOpen)}\n                                >\n                                    close\n                                </ModalButtonClose>\n                                <ModalButtonAdd type=\"submit\">\n                                    add\n                                </ModalButtonAdd>\n                            </div>\n                        </ModalForm>\n                    </ModalContainer>\n                </ModalBackground>\n            ) : null}\n        </Legend>\n    )\n}\n\nexport default AcceptedSchiftLegend\n","import React from \"react\"\nimport styled from \"styled-components\"\n\n// import Calendar from './calendar/Calendar'\n\nimport AcceptedSchiftLegend from \"./acceptedShiftLegend/acceptedShiftLegend\"\n\nconst StyledSideBar = styled.div`\n    max-width: 18rem;\n    @media (max-width: 800px) {\n        max-width: inherit;\n    }\n`\n\nconst Spacer = styled.div`\n    height: 59px;\n    @media (max-width: 800px) {\n        display: none;\n    }\n`\n\nconst Sidebar = ({ acceptedShift, setAcceptedShift }) => {\n    return (\n        <StyledSideBar>\n            {/* <Calendar /> */}\n            <Spacer />\n            <AcceptedSchiftLegend\n                acceptedShift={acceptedShift}\n                setAcceptedShift={setAcceptedShift}\n            />\n        </StyledSideBar>\n    )\n}\n\nexport default Sidebar\n","import React from \"react\"\nimport { TableContent } from \"../calendar/bigCalendar-style\"\n\nexport const coloredDiv = (turn, acceptedShift) => {\n    if (!acceptedShift) return <TableContent />\n\n    acceptedShift = acceptedShift.find((shift) => shift.shiftName === turn)\n\n    if (acceptedShift)\n        return <TableContent color={acceptedShift.color}></TableContent>\n}\n","import styled, { css } from \"styled-components\"\nimport { workshiftItem } from \"../utils/calendar\"\n\nexport const Frame = styled.div`\n    display: flex;\n    flex-direction: column;\n    /* margin-left: 18rem; */\n    height: 100%;\n    width: 100%;\n    padding-right: 30px;\n    @media (max-width: 800px) {\n        padding: 0 10px;\n    }\n`\n\nexport const Calendar = styled.div`\n    @media (max-width: 800px) {\n        overflow-x: scroll;\n    }\n`\nexport const Header = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 20px 15px;\n    color: var(--color-primary);\n    letter-spacing: 2px;\n    /* background: var(--background-main); */\n    /* overflow-y: auto; */\n`\n\nexport const Button = styled.div`\n    cursor: pointer;\n    margin: 0 15px;\n`\n\nexport const ButtonPrimary = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 30px;\n    margin-left: 20px;\n    padding: 10px 20px;\n    color: var(--color-primary);\n    font-weight: bold;\n    font-size: 1.3rem;\n    border: var(--color-border);\n    cursor: pointer;\n    :hover {\n        background: var(--color-primary);\n        color: var(--color-background);\n        border: 2px solid var(--color-primary);\n    }\n    display: none;\n    ${(props) =>\n        props.isEditable &&\n        css`\n            display: inherit;\n        `}\n`\n\nexport const ButtonSecondary = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 30px;\n    margin-left: 20px;\n    padding: 10px 20px;\n    color: var(--color-green1);\n    font-weight: bold;\n    font-size: 1.3rem;\n    border: var(--color-border);\n    cursor: pointer;\n    :hover {\n        background: var(--color-green1);\n        color: #ededed;\n        border: 2px solid var(--color-green1);\n    }\n`\nexport const Day = styled.div`\n    /* width: 14.2%; */\n    height: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    user-select: none;\n    /* border-left: var(--color-border) */\n\n    ${(props) =>\n        props.isToday &&\n        css`\n            background-color: var(--color-selected);\n        `}\n\n    ${(props) =>\n        props.isSelected &&\n        css`\n            background-color: var(--color-selected);\n        `}\n`\n\nexport const Table = styled.table`\n    border-collapse: collapse;\n    width: 100%;\n    /* background: var(--background-main); */\n    @media (max-width: 800px) {\n        margin-bottom: 20px;\n    }\n`\n\nexport const TableHead = styled.thead``\n\nexport const TableRow = styled.tr`\n    border: var(--color-border);\n    overflow: inherit;\n`\n\nexport const TableCell = styled.td`\n    border: var(--color-border);\n    font-weight: normal;\n    position: relative;\n    ${(props) =>\n        props.isToday &&\n        css`\n            background-color: var(--color-selected);\n        `};\n`\n\nexport const TableCellHeader = styled.th`\n    width: 2.8%;\n    border: var(--color-border);\n    ${(props) =>\n        props.isToday &&\n        css`\n            background-color: var(--color-selected);\n        `};\n    position: sticky;\n    position: -webkit-sticky; /* safari */\n    top: -2px;\n    background-color: var(--color-background);\n    z-index: 5;\n`\n\nexport const TableContent = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    cursor: pointer;\n    background-color: yellow;\n    cursor: pointer;\n    ${(props) => {\n        return css`\n            background-color: var(${props.color});\n        `\n    }}}\n`\n\nexport const Names = styled.div`\n    padding: 10px 20px;\n    font-size: 1.5rem;\n    @media (max-width: 768px) {\n        font-size: 1rem;\n    }\n`\n\nexport const DeleteButton = styled.div`\n    font-size: 1rem;\n    display: none;\n    color: red;\n    ${Names}:hover & {\n        display: block;\n        cursor: pointer;\n    }\n`\n","export const DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_OF_THE_WEEK = [\"L\", \"M\", \"X\", \"G\", \"V\", \"S\", \"D\"]\nexport const MONTHS = [\n    \"gennaio\",\n    \"febbraio\",\n    \"marzo\",\n    \"aprile\",\n    \"maggio\",\n    \"giugno\",\n    \"luglio\",\n    \"agosto\",\n    \"settembre\",\n    \"ottobre\",\n    \"novembre\",\n    \"dicembre\",\n]\n","export function getStartDayOfMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay()\n}\n\nexport function isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n}\n","import { isLeapYear, getStartDayOfMonth } from \"./utility\"\nimport { DAYS, DAYS_LEAP } from \"./Constants\"\nimport { useReducer } from \"react\"\n\nfunction updateDate(date) {\n    return {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n        startDay: getStartDayOfMonth(date),\n    }\n}\n\nconst actionTypes = {\n    nextMonth: \"next_month\",\n    previousMonth: \"previous_month\",\n    update: \"update\",\n    newDate: \"new_date\",\n}\n\nfunction dateReducer(state, { type, payload }) {\n    switch (type) {\n    case actionTypes.nextMonth: {\n        const newDate = new Date(state.year, state.month + 1, state.day)\n        return {\n            date: newDate,\n            ...updateDate(newDate),\n        }\n    }\n    case actionTypes.previousMonth: {\n        const newDate = new Date(state.year, state.month - 1, state.day)\n        return {\n            ...state,\n            date: newDate,\n            ...updateDate(newDate),\n        }\n    }\n    case actionTypes.update: {\n        return {\n            ...state,\n            day: state.date.getDate(),\n            month: state.date.getMonth(),\n            year: state.date.getFullYear(),\n            setStartday: getStartDayOfMonth(state.date),\n        }\n    }\n    case actionTypes.newDate: {\n        const { year, month, day } = payload\n        const newDate = new Date(year, month, day)\n        return {\n            ...state,\n            date: newDate,\n            ...updateDate(newDate),\n        }\n    }\n    default: {\n        throw new Error(`Unsupported type: ${type}`)\n    }\n    }\n}\n\nconst today = new Date()\n\nconst initialState = {\n    date: today,\n    day: today.getDate(),\n    month: today.getMonth(),\n    year: today.getFullYear(),\n    startDay: getStartDayOfMonth(today),\n}\n\nfunction useDate({ reducer = dateReducer } = {}) {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    const { date, day, month, year, startDay } = state\n\n    const days = isLeapYear(date.getFullYear()) ? DAYS_LEAP : DAYS\n\n    function isToday(day) {\n        return day === today.getDate()\n    }\n\n    const nextMonth = () => {\n        dispatch({ type: actionTypes.nextMonth })\n    }\n\n    const previousMonth = () => {\n        dispatch({ type: actionTypes.previousMonth })\n    }\n\n    const newDate = (year, month, day) => {\n        dispatch({\n            type: actionTypes.newDate,\n            payload: { year, month, day },\n        })\n    }\n\n    return {\n        isToday,\n        days,\n        nextMonth,\n        previousMonth,\n        newDate,\n        date,\n        day,\n        month,\n        year,\n        startDay,\n    }\n}\n\nexport default useDate\n","import axios from \"axios\"\nimport storage from \"../utils/storage\"\nconst baseUrl = \"/api/schedule\"\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl, storage.getAxiosConfig())\n    return request.data\n}\n\nconst getYear = async (year) => {\n    const request = await axios.get(`${baseUrl}/${year}`, storage.getAxiosConfig())\n    return request.data\n}\n\nconst getMonth = async (year, month) => {\n    const request = await axios.get(\n        `${baseUrl}/${year}/${month + 1}`,\n        storage.getAxiosConfig()\n    )\n    return request.data\n}\n\nconst addNewMember = async (newObject, year, month) => {\n    /*\n     * body of the request\n     * {\n     *   teamName: current loggedin team,\n     *   teamId: teamId,\n     *   name: name of the team member to add\n     *   days: []       OPTIONAL\n     * }\n     */\n    const request = await axios.post(\n        `${baseUrl}/${year}/${month + 1}`,\n        newObject,\n        storage.getAxiosConfig()\n    )\n    return request.data\n}\n\nconst update = async (year, id, newObject) => {\n    const request = await axios.put(\n        `${baseUrl}/${year}/${id}`,\n        newObject,\n        storage.getAxiosConfig()\n    )\n    return request.data\n}\n\nconst removeTeamMember = async (year, id) => {\n    const request = await axios.delete(`${baseUrl}/${year}/${id}`, storage.getAxiosConfig())\n    return request.data\n}\n\nexport default {\n    getAll,\n    getYear,\n    getMonth,\n    addNewMember,\n    update,\n    removeTeamMember,\n}\n","import React from \"react\"\nimport {\n    ModalContainer,\n    ModalBackground,\n    ModalForm,\n    ModalInput,\n    ModalButtonAdd,\n    ModalButtonClose,\n} from \"../modal/Modal.styles\"\nimport scheduleService from \"../../services/scheduledTime\"\n\nconst AddNewRowModal = ({\n    setTurns,\n    turns,\n    year,\n    month,\n    isOpen,\n    setIsOpen,\n}) => {\n    const [name, setName] = React.useState(\"\")\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n\n        if (name === \"\" || name === null) return\n        if (name.length === 0) return alert(\"Name can't bi empty\")\n\n        const newMember = {\n            name,\n        }\n        const addedMember = await scheduleService.addNewMember(\n            newMember,\n            year,\n            month\n        )\n        setTurns([...turns, addedMember])\n        setIsOpen(!isOpen)\n    }\n\n    return (\n        <ModalBackground>\n            <ModalContainer>\n                <ModalForm onSubmit={handleSubmit}>\n                    <ModalInput\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        placeholder=\"Name\"\n                        onChange={({ target }) => setName(target.value)}\n                    />\n                    <div style={{ display: \"flex\" }}>\n                        <ModalButtonClose onClick={() => setIsOpen(!isOpen)}>\n                            close\n                        </ModalButtonClose>\n                        <ModalButtonAdd type=\"submit\">add</ModalButtonAdd>\n                    </div>\n                </ModalForm>\n            </ModalContainer>\n        </ModalBackground>\n    )\n}\n\nexport default AddNewRowModal\n","import React from \"react\"\nimport {\n    Frame,\n    Calendar,\n    Header,\n    Button,\n    ButtonPrimary,\n    ButtonSecondary,\n    Day,\n    Table,\n    TableCell,\n    TableCellHeader,\n    TableContent,\n    TableHead,\n    TableRow,\n    Names,\n    DeleteButton,\n} from \"./bigCalendar-style\"\n\nimport { MONTHS } from \"../hooks/useDate/Constants\"\n\nimport useDate from \"../hooks/useDate/useDate\"\nimport useLocalStorageState from \"../hooks/useLocalStorageState\"\nimport { useMediaQuery } from \"../hooks/useMediaQuery\"\n\nimport scheduleService from \"../../services/scheduledTime\"\nimport { coloredDiv } from \"../utils/calendar\"\nimport AddNewRowModal from \"./addNewRowModal\"\n\nconst BigCalendar = ({ acceptedShift }) => {\n    // const today = new Date();\n    const {\n        isToday,\n        nextMonth,\n        previousMonth,\n        // newDate,\n        days,\n        // date,\n        day,\n        month,\n        year,\n        // startDay\n    } = useDate()\n\n    const [turns, setTurns] = useLocalStorageState(\"turns\", [])\n    const [isEditable, setIsEditable] = React.useState(false)\n    const [isOpen, setIsOpen] = React.useState(false)\n    let isPageWide = useMediaQuery(\"(min-width: 800px)\")\n\n    React.useEffect(() => {\n        scheduleService.getMonth(year, month).then((data) => {\n            setTurns(data)\n        })\n    }, [year, month, setTurns])\n\n    const putValuesToTable = (worker, monthLenght) => {\n        const { name, days, _id } = worker\n\n        let children = [\n            <TableCell\n                key={\n                    _id + \"tr\" ||\n                    `is-unique-enough ${Math.floor(Math.random() * 100)}`\n                }\n            >\n                <Names>\n                    {name}\n                    <DeleteButton onClick={() => removeRow(_id, name)}>\n                        delete\n                    </DeleteButton>\n                </Names>\n            </TableCell>,\n        ]\n        for (let i = 0; i < monthLenght - 1; i++) {\n            if (!days) {\n                children.push(\n                    <TableCell\n                        key={_id + i}\n                        onClick={() => cycleThrougShifts(_id, i, days[i])}\n                    />\n                )\n            } else if (days[i]) {\n                children.push(\n                    <TableCell\n                        key={_id + i}\n                        onClick={() => cycleThrougShifts(_id, i, days[i])}\n                    >\n                        {coloredDiv(days[i], acceptedShift)}\n                    </TableCell>\n                )\n            } else {\n                children.push(\n                    <TableCell\n                        key={_id + i}\n                        onClick={() => cycleThrougShifts(_id, i, days[i])}\n                    ></TableCell>\n                )\n            }\n        }\n        return children\n    }\n\n    const putValuesToTableMobile = (d) => {\n        let children = [\n            <TableCell key={\"dayTCell\" + d}>\n                <Day isSelected={d + 1 === day}>{d + 1}</Day>\n            </TableCell>,\n        ]\n\n        for (let worker of turns) {\n            if (!worker.days) {\n                children.push(\n                    <TableCell\n                        key={worker._id + d}\n                        onClick={() =>\n                            cycleThrougShifts(worker._id, d, worker.days[d])\n                        }\n                    />\n                )\n            } else if (worker.days[d]) {\n                children.push(\n                    <TableCell\n                        key={worker._id + d}\n                        onClick={() =>\n                            cycleThrougShifts(worker._id, d, worker.days[d])\n                        }\n                    >\n                        {coloredDiv(worker.days[d], acceptedShift)}\n                    </TableCell>\n                )\n            } else {\n                children.push(\n                    <TableCell\n                        key={worker._id + d}\n                        onClick={() =>\n                            cycleThrougShifts(worker._id, d, worker.days[d])\n                        }\n                    ></TableCell>\n                )\n            }\n        }\n        return children\n    }\n\n    // need to take the shiftNames array and add an empty string to have the\n    // empty cell onto the calendar\n    let shiftNames = []\n    if (acceptedShift)\n        shiftNames = acceptedShift.map((shift) => shift.shiftName)\n    shiftNames = shiftNames.concat(\"\")\n\n    const cycleThrougShifts = (workerId, scheduleIndex, schedule) => {\n        if (!isEditable) return\n        const acceptedShiftIndex = shiftNames.findIndex(\n            (shift) => shift === schedule\n        )\n\n        let index = acceptedShiftIndex\n\n        // -1 so when update newSchedule the index became 0\n        if (acceptedShiftIndex === shiftNames.length - 1) {\n            index = -1\n        }\n\n        let newScheduledDays = turns.find((worker) => worker._id === workerId)\n            .days\n\n        if (newScheduledDays === null) newScheduledDays = []\n\n        newScheduledDays[scheduleIndex] = shiftNames[index + 1]\n        scheduleService.update(year, workerId, newScheduledDays)\n\n        setTurns([...turns])\n    }\n\n    function removeRow(idToDelete, name) {\n        let newWorkerTeam = turns.filter((worker) => worker._id !== idToDelete)\n        const ok = window.confirm(`Remove ${name}?`)\n        if (ok) {\n            scheduleService.removeTeamMember(year, idToDelete)\n            setTurns([...newWorkerTeam])\n        }\n    }\n\n    function renderMobileTable() {\n        if (turns.length !== 0) {\n            return (\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCellHeader />\n                            {turns.map((worker) => {\n                                return (\n                                    <TableCellHeader key={worker._id}>\n                                        <Names>\n                                            {worker.name}\n                                            <DeleteButton\n                                                onClick={() =>\n                                                    removeRow(\n                                                        worker._id,\n                                                        worker.name\n                                                    )\n                                                }\n                                            >\n                                                delete\n                                            </DeleteButton>\n                                        </Names>\n                                    </TableCellHeader>\n                                )\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <tbody>\n                        {Array(days[month])\n                            .fill(null)\n                            .map((_, d) => {\n                                return (\n                                    <TableRow key={d}>\n                                        {putValuesToTableMobile(d)}\n                                    </TableRow>\n                                )\n                            })}\n                    </tbody>\n                </Table>\n            )\n        }\n\n        return (\n            <div style={{ marginBottom: \"40px\" }}>\n                Start by clicking on{\" \"}\n                <span style={{ fontWeight: \"bold\" }}>edit</span> and add a new\n                person\n            </div>\n        )\n    }\n\n    if (isPageWide) {\n        return (\n            <Frame>\n                <Header>\n                    <Button onClick={() => previousMonth()}>&lt;</Button>\n                    <div>\n                        {MONTHS[month].toUpperCase()} {year}\n                    </div>\n                    <Button onClick={() => nextMonth()}>&gt;</Button>\n                </Header>\n                <Calendar>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                {Array(days[month] + 1)\n                                    .fill(null)\n                                    .map((_, d) => {\n                                        return (\n                                            <TableCellHeader\n                                                key={d}\n                                                isToday={isToday(d)}\n                                            >\n                                                <Day isSelected={d === day}>\n                                                    {d > 0 ? d : \"\"}\n                                                </Day>\n                                            </TableCellHeader>\n                                        )\n                                    })}\n                            </TableRow>\n                        </TableHead>\n                        <tbody>\n                            {turns.map((worker) => {\n                                return (\n                                    <TableRow key={worker._id}>\n                                        {putValuesToTable(\n                                            worker,\n                                            days[month] + 1\n                                        )}\n                                    </TableRow>\n                                )\n                            })}\n                        </tbody>\n                    </Table>\n                </Calendar>\n                <div\n                    style={{\n                        display: \"flex\",\n                        marginLeft: \"auto\",\n                        justifyContent: \"center\",\n                        alignContent: \"space-around\",\n                        marginTop: \"40px\",\n                    }}\n                >\n                    <ButtonPrimary\n                        onClick={() => setIsOpen(!isOpen)}\n                        isEditable={isEditable}\n                    >\n                        Add new\n                    </ButtonPrimary>\n                    <ButtonSecondary onClick={() => setIsEditable(!isEditable)}>\n                        {isEditable ? \"Done\" : \"Edit\"}\n                    </ButtonSecondary>\n                </div>\n                {isOpen ? (\n                    <AddNewRowModal\n                        setTurns={setTurns}\n                        turns={turns}\n                        year={year}\n                        month={month}\n                        isOpen={isOpen}\n                        setIsOpen={setIsOpen}\n                    />\n                ) : null}\n            </Frame>\n        )\n    }\n\n    return (\n        <Frame>\n            <Header>\n                <Button onClick={() => previousMonth()}>&lt;</Button>\n                <div>\n                    {MONTHS[month].toUpperCase()} {year}\n                </div>\n                <Button onClick={() => nextMonth()}>&gt;</Button>\n            </Header>\n            <div\n                style={{\n                    display: \"flex\",\n                    marginLeft: \"auto\",\n                    marginBottom: \"20px\",\n                    justifyContent: \"center\",\n                    alignContent: \"space-around\",\n                }}\n            >\n                <ButtonPrimary\n                    onClick={() => setIsOpen(!isOpen)}\n                    isEditable={isEditable}\n                >\n                    Add new\n                </ButtonPrimary>\n                <ButtonSecondary onClick={() => setIsEditable(!isEditable)}>\n                    {isEditable ? \"Done\" : \"Edit\"}\n                </ButtonSecondary>\n            </div>\n            <Calendar>{renderMobileTable()}</Calendar>\n            <div\n                style={{\n                    display: \"flex\",\n                    marginLeft: \"auto\",\n                    marginBottom: \"20px\",\n                    justifyContent: \"center\",\n                    alignContent: \"space-around\",\n                }}\n            >\n                <ButtonPrimary\n                    onClick={() => setIsOpen(!isOpen)}\n                    isEditable={isEditable}\n                >\n                    Add new\n                </ButtonPrimary>\n                <ButtonSecondary onClick={() => setIsEditable(!isEditable)}>\n                    {isEditable ? \"Done\" : \"Edit\"}\n                </ButtonSecondary>\n            </div>\n            {isOpen ? (\n                <AddNewRowModal\n                    setTurns={setTurns}\n                    turns={turns}\n                    year={year}\n                    month={month}\n                    isOpen={isOpen}\n                    setIsOpen={setIsOpen}\n                />\n            ) : null}\n        </Frame>\n    )\n}\n\nexport default BigCalendar\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport SideBar from \"./Sidebar\"\nimport BigCalendar from \"./calendar/BigCalendar\"\n\nimport teamService from \"../services/teams\"\n\nconst StyledMain = styled.div`\n    width: 100vw;\n    display: flex;\n    @media (max-width: 800px) {\n        flex-direction: column;\n    }\n`\n\nconst Main = () => {\n    const [acceptedShift, setAcceptedShift] = React.useState()\n\n    React.useEffect(() => {\n        teamService.getAcceptedShift().then((data) => {\n            return setAcceptedShift(data.acceptedShift)\n        })\n    }, [setAcceptedShift])\n\n    return (\n        <StyledMain>\n            <SideBar\n                acceptedShift={acceptedShift}\n                setAcceptedShift={setAcceptedShift}\n            />\n            <BigCalendar\n                style={{\n                    backgroundColor: \"var(--gradient-background)\",\n                    height: \"100%\",\n                }}\n                acceptedShift={acceptedShift}\n            />\n        </StyledMain>\n    )\n}\n\nexport default Main\n","import axios from \"axios\"\nconst baseUrl = \"/api/login\"\n\nconst login = async (credential) => {\n    const response = await axios.post(baseUrl, credential)\n    return response.data\n}\n\nexport default { login }\n","import styled, { css } from \"styled-components\"\n\nexport const NotificationStyled = styled.div`\n    position: absolute;\n    z-index: 999;\n    top: 40px;\n    border-radius: 5px;\n    padding: 10px 20px;\n    background: var(--color-background);\n    box-shadow: 0 3px 20px 2px rgba(0, 0, 0, 0.6);\n    ${(props) => {\n        switch (props.type) {\n        case \"succes\":\n            return css`\n                    color: var(--color-green);\n                    border: 1px solid var(--color-green);\n                `\n        case \"error\":\n            return css`\n                    color: var(--color-terziary);\n                    border: 1px solid var(--color-terziary);\n                `\n        }\n    }}\n`\n","import React from \"react\"\nimport { NotificationStyled } from \"./notification-style\"\n\nconst Notification = ({ notification }) => {\n    if (!notification) {\n        return null\n    }\n    return (\n        <NotificationStyled type={notification.type}>\n            {notification.message}\n        </NotificationStyled>\n    )\n}\n\nexport default Notification\n","import styled from \"styled-components\"\n\nexport const ContainerLogin = styled.div`\n    width: 100%;\n    min-height: 100vh;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 15px;\n    background: var(--color-header-background);\n`\n\nexport const WrapLogin = styled.div`\n    width: 500px;\n    background: var(--color-background);\n    border-radius: 10px;\n    overflow: hidden;\n    box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.3);\n    -moz-box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.3);\n    -webkit-box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.3);\n    -o-box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.3);\n    -ms-box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.3);\n    padding: 50px 55px 60px;\n`\n\nexport const FormLogin = styled.form`\n    width: 100%;\n`\n\nexport const FormTitle = styled.span`\n    display: block;\n    font-size: 30px;\n    color: var(--color-text);\n    line-height: 1.2;\n    text-align: center;\n    padding-bottom: 33px;\n`\n\nexport const WrapInput = styled.div`\n    width: 100%;\n    position: relative;\n    background-color: var(--color-background);\n`\n\nexport const Input = styled.input`\n    height: 68px;\n    padding: 0 25px;\n    display: block;\n    width: 100%;\n    background: 0 0;\n    font-size: 18px;\n    color: var(--color-text);\n    line-height: 1.2;\n    outline: none;\n    border: var(--color-border);\n`\n\nexport const WrapButton = styled.div`\n    width: 100%;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 20px;\n`\n\nexport const Button = styled.button`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n    align-items: center;\n    padding: 0 20px;\n    width: 100%;\n    height: 60px;\n    background-color: var(--color-primary);\n    font-size: 14px;\n    color: #fff;\n    line-height: 1.2;\n    text-transform: uppercase;\n    -webkit-transition: all 0.4s;\n    -o-transition: all 0.4s;\n    -moz-transition: all 0.4s;\n    transition: all 0.4s;\n    outline: none;\n    border: none;\n`\n\nexport const TextCenter = styled.div`\n    text-align: center;\n`\n\nexport const Link = styled.a`\n    font-size: 15px;\n    line-height: 1.4;\n    color: var(--color-primary);\n    cursor: pointer;\n`\n","import React from \"react\"\nimport loginService from \"../../services/login\"\nimport teamService from \"../../services/teams\"\nimport storage from \"../../utils/storage\"\nimport Notification from \"../notification/Notification\"\nimport {\n    Input,\n    ContainerLogin,\n    WrapLogin,\n    WrapInput,\n    WrapButton,\n    FormLogin,\n    FormTitle,\n    TextCenter,\n    Link,\n    Button,\n} from \"./loginForm-styles\"\n\nconst LoginForm = ({ setUser }) => {\n    const [teamName, setTeamName] = React.useState(\"\")\n    const [password, setPassword] = React.useState(\"\")\n    const [email, setEmail] = React.useState(\"\")\n    const [notification, setNotification] = React.useState(null)\n    const [isLogin, setIsLogin] = React.useState(true)\n\n    const validEmailRegex = RegExp(\n        // eslint-disable-next-line no-useless-escape\n        /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n    )\n\n    const validateForm = () => {\n        let isValid = true\n        if (teamName.length <= 3) {\n            setNotification({\n                type: \"error\",\n                message: \"Team Name must be at least 3 characters\",\n            })\n            isValid = false\n        }\n        if (!isLogin && !validEmailRegex.test(email)) {\n            setNotification({\n                type: \"error\",\n                message: \"invalid email address\",\n            })\n            isValid = false\n        }\n        if (password.length < 8) {\n            setNotification({\n                type: \"error\",\n                message: \"password too short\",\n            })\n\n            isValid = false\n        }\n\n        setTimeout(() => {\n            setNotification(null)\n        }, 5000)\n\n        return isValid\n    }\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n\n        if (!validateForm()) return\n\n        try {\n            const team = await loginService.login({ teamName, password })\n            setUser(team)\n            storage.saveUser(team)\n        } catch (exception) {\n            setNotification({ type: \"error\", message: \"Wrong credentials\" })\n            setTimeout(() => {\n                setNotification(null)\n            }, 5000)\n        }\n    }\n\n    const handleRegister = async (event) => {\n        event.preventDefault()\n        if (!validateForm()) return\n        try {\n            await teamService.register({ teamName, email, password })\n            const team = await loginService.login({ teamName, password })\n            storage.saveUser(team)\n            setUser(team)\n        } catch (exception) {\n            setNotification({ type: \"error\", message: \"Wrong credentials\" })\n            setTimeout(() => {\n                setNotification(null)\n            }, 5000)\n        }\n    }\n\n    if (!isLogin) {\n        return (\n            <ContainerLogin>\n                <Notification notification={notification} />\n                <WrapLogin>\n                    <FormLogin onSubmit={handleRegister}>\n                        <FormTitle>Creat New Account</FormTitle>\n                        <WrapInput>\n                            <Input\n                                type=\"text\"\n                                placeholder=\"team name\"\n                                value={teamName}\n                                name=\"teamName\"\n                                onChange={({ target }) =>\n                                    setTeamName(target.value)\n                                }\n                            />\n                        </WrapInput>\n                        <WrapInput>\n                            <Input\n                                style={{ borderTop: \"none\" }}\n                                type=\"email\"\n                                placeholder=\"email\"\n                                value={email}\n                                name=\"email\"\n                                onChange={({ target }) =>\n                                    setEmail(target.value)\n                                }\n                            />\n                        </WrapInput>\n                        <WrapInput>\n                            <Input\n                                style={{ borderTop: \"none\" }}\n                                type=\"password\"\n                                value={password}\n                                name=\"password\"\n                                placeholder=\"password\"\n                                onChange={({ target }) =>\n                                    setPassword(target.value)\n                                }\n                            />\n                        </WrapInput>\n                        <WrapButton>\n                            <Button type=\"submit\">Register</Button>\n                        </WrapButton>\n                        <TextCenter style={{ paddingTop: \"45px\" }}>\n                            Whant to log-in?{\" \"}\n                            <Link onClick={() => setIsLogin(!isLogin)}>\n                                Login\n                            </Link>\n                        </TextCenter>\n                    </FormLogin>\n                </WrapLogin>\n            </ContainerLogin>\n        )\n    }\n    return (\n        <ContainerLogin>\n            <Notification notification={notification} />\n            <WrapLogin>\n                <FormLogin onSubmit={handleLogin}>\n                    <FormTitle>Account Login</FormTitle>\n                    <WrapInput>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"team name\"\n                            value={teamName}\n                            name=\"teamName\"\n                            onChange={({ target }) => setTeamName(target.value)}\n                        />\n                    </WrapInput>\n                    <WrapInput>\n                        <Input\n                            style={{ borderTop: \"none\" }}\n                            type=\"password\"\n                            value={password}\n                            name=\"password\"\n                            placeholder=\"password\"\n                            onChange={({ target }) => setPassword(target.value)}\n                        />\n                    </WrapInput>\n                    <WrapButton>\n                        <Button type=\"submit\">login</Button>\n                    </WrapButton>\n                    <TextCenter style={{ paddingTop: \"45px\" }}>\n                        Not Register yet?{\" \"}\n                        <Link onClick={() => setIsLogin(!isLogin)}>\n                            Register\n                        </Link>\n                    </TextCenter>\n                </FormLogin>\n            </WrapLogin>\n        </ContainerLogin>\n    )\n}\n\nexport default LoginForm\n","import React from \"react\"\nimport \"./index.css\"\nimport { GlobalStyles } from \"./GlobalStyles\"\n\nimport Header from \"./components/Header/Header\"\nimport Main from \"./components/Main\"\nimport LoginForm from \"./components/loginForm/LoginForm\"\n\nimport useLocalStorageState from \"./components/hooks/useLocalStorageState\"\n\nconst StyledApp = ({ children, theme }) => {\n    return (\n        <>\n            <GlobalStyles theme={theme} />\n            {children}\n        </>\n    )\n}\n\nconst App = () => {\n    const [theme, setTheme] = useLocalStorageState(\"theme\", \"dark\")\n    const [user, setUser] = useLocalStorageState(\"loggedUser\", null)\n\n    function switchTheme(passedTheme) {\n        return setTheme(passedTheme)\n    }\n\n    return (\n        <StyledApp theme={theme}>\n            {user === null ? (\n                <LoginForm setUser={setUser} />\n            ) : (\n                <>\n                    <Header switchTheme={switchTheme} setUser={setUser} />\n                    <Main />\n                </>\n            )}\n        </StyledApp>\n    )\n}\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}