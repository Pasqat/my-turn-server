{"version":3,"sources":["GlobalStyles.js","hooks/useLocalStorageState.js","components/header/icon.jsx","components/header/themeModeIcon.jsx","components/header/header.jsx","components/tooltip/tooltip.js","components/acceptedShiftLegend/legend.style.js","hooks/useMediaQuery.js","context/turnsContext.jsx","components/modal/modal.styles.js","utils/storage.js","services/teams.js","constants/color.js","components/acceptedShiftLegend/addItem.jsx","components/acceptedShiftLegend/removeAcceptedShift.jsx","components/acceptedShiftLegend/updateItem.jsx","components/acceptedShiftLegend/acceptedShiftLegend.js","components/Sidebar.jsx","components/calendar/calendar.style.jsx","hooks/useDate/utility.js","hooks/useDate/Constants.js","hooks/useDate/useDate.js","services/scheduledTime.js","components/utils/calendar.js","components/calendar/addNewRowModal.jsx","components/calendar/calendar-desktopTable.jsx","components/calendar/calendar-mobileTable.jsx","components/calendar/calendar.jsx","components/statistisBlock/block.style.js","components/statistisBlock/TotalHoursBlock.jsx","components/Main.jsx","services/login.js","components/notification/notification-style.js","components/notification/notification.jsx","components/loginForm/loginForm.styles.js","components/loginForm/loginForm.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","props","theme","css","useLocalStorageState","key","defaultValue","serialize","JSON","stringify","deserialize","parse","prevKeyRef","useRef","useState","valuesToLocalStorage","window","localStorage","getItem","state","setState","useEffect","prevKey","current","removeItem","setItem","styled","svg","attrs","version","xmlns","xmlnsXlink","Svg","Icon","Sun","className","viewBox","fill","width","height","x","y","transform","d","Moon","StyledHeader","div","H2","h2","Link","Button","Header","switchTheme","setUser","setTheme","onClick","Tooltip","TooltipText","span","Legend","LegendItem","ItemDot","color","ItemDotSelection","isSelected","AddItem","useMediaQuery","query","React","matches","setMatches","media","matchMedia","listener","addEventListener","removeEventListener","reducer","action","type","isEditable","turns","payload","acceptedShift","initialState","notification","ComponentContext","createContext","TurnsProvider","useReducer","dispatch","Provider","value","children","ModalContainer","ModalForm","form","ModalInput","input","ModalButton","select","button","ModalButtonAdd","ModalButtonClose","ModalButtonDelete","ModalBackground","ModalColorsGroup","storageKey","loadUser","user","headers","Authorization","token","baseUrl","getAll","a","axios","get","response","data","register","credential","post","getAcceptedShift","storage","updateAcceptedShift","newAcceptedShift","put","AddAcceptedShift","isOpen","setIsOpen","shiftName","setShiftName","setColor","hours","setHours","useContext","handleSubmitNewShift","event","preventDefault","length","alert","findIndex","element","teamService","newObject","onSubmit","name","placeholder","onChange","target","min","max","style","display","colors","map","c","RemoveIcon","RemoveAcceptedShift","newAcceptedShifts","filter","shift","flexDirection","textAlign","fontSize","lineHeight","padding","marginBottom","justifyItems","UpdateAcceptedShift","oldShift","oldColor","oldHours","console","log","updatingAcceptedShift","updatedAcceptedShift","AcceptedSchiftLegend","isAdding","setIsAdding","isUpdating","setIsUpdating","oldAcceptedShidt","setOldAcceptedShift","isPageWide","maxAcceptedShift","fontWeight","marginLeft","cursor","_id","StyledSideBar","Spacer","Sidebar","Frame","Container","ButtonPrimary","ButtonSecondary","Day","isToday","Table","table","TableHead","thead","TableRow","tr","TableCell","td","TableCellHeader","th","TableContent","Names","DeleteButton","getStartDayOfMonth","date","Date","getFullYear","getMonth","getDay","isLeapYear","year","DAYS","DAYS_LEAP","MONTHS","updateDate","day","getDate","month","startDay","actionTypes","dateReducer","newDate","setStartday","Error","today","useDate","days","nextMonth","previousMonth","request","getYear","addNewMember","update","id","removeTeamMember","delete","coloredDiv","turn","find","AddNewRowModal","setName","handleSubmit","newMember","scheduleService","addedMember","DesktopTable","putValuesToTable","then","toUpperCase","Array","_","worker","justifyContent","alignContent","marginTop","MobileTable","putValuesToTableMobile","removeRow","Calendar","shiftNames","concat","cycleThrougShifts","workerId","scheduleIndex","schedule","acceptedShiftIndex","index","newScheduledDays","idToDelete","newWorkerTeam","confirm","monthLenght","i","push","Title","h3","Grid","Card","Name","ShiftName","ColoredBlock","Total","TotalHoursBlock","workLikeADonk","total","count","reduce","counter","shiftPerDay","totalCount","paddingRight","member","StyledMain","Main","backgroundColor","login","NotificationStyled","Notification","message","ContainerLogin","WrapLogin","FormLogin","FormTitle","WrapInput","Input","WrapButton","TextCenter","LoginForm","teamName","setTeamName","password","setPassword","email","setEmail","setNotification","isLogin","setIsLogin","validEmailRegex","RegExp","validateForm","isValid","test","setTimeout","handleLogin","loginService","team","handleRegister","borderTop","paddingTop","StyledApp","App","passedTheme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e6e0590.chunk.js","sourcesContent":["import { createGlobalStyle, css } from \"styled-components\"\n\n// GlobalStyle Component\n// to attach CSS-variables\n// to html\nexport const GlobalStyles = createGlobalStyle`\n${(props) => {\n        if (props.theme === \"light\") {\n            return css`\n            html {\n                --color-text: #595e77;\n                --color-text-light: #c6c9df;\n                --color-background: #fff;\n                --gradient-background: linear-gradient(\n                    to bottom,\n                    rgba(255, 255, 255, 0.15),\n                    rgb(234, 228, 255, 0.15)\n                );\n                --background-main: rgba(0, 0, 0, 0);\n                --color-header-background: #e8edff;\n                --color-primary: #4bbced;\n                --color-secondary: #fcd173;\n                --color-blue1: #4bbced;\n                --color-blue2: #5a6ff0;\n                --color-yellow1: #ffcb48;\n                --color-orange1: #ffa948;\n                --color-green1: #34b966;\n                --color-green2: #078837;\n                --color-purple1: #653dae;\n                --color-purple2: #be3699;\n                --color-border: 2px solid rgb(240, 246, 247);\n                --color-selected: #e8edff;\n            }\n        `\n        } else if (props.theme === \"dark\") {\n            return css`\n            html {\n                --color-text: #595e77;\n                --color-text-light: #3e4157;\n                --color-background: #292b3f;\n                --gradient-background: linear-gradient(\n                    to bottom,\n                    rgb(41, 43, 63, 0.15),\n                    rgb(51, 38, 57, 0.15)\n                );\n                --background-main: rgba(71, 70, 91, 0.25);\n                --color-header-background: #1d1d31;\n                --color-primary: #1099a2;\n                --color-secondary: #b19053;\n                --color-blue1: #1099a2;\n                --color-blue2: #3d5176;\n                --color-yellow1: #b19053;\n                --color-orange1: #b16550;\n                --color-green1: #3c973f;\n                --color-green2: #3a7b5c;\n                --color-purple1: #593d78;\n                --color-purple2: #7b3a73;\n                --color-border: 2px solid #37394e;\n                --color-selected: #3a3a51;\n            }\n        `\n        }\n    }}\n\nbody {\n    height: 100%;\n    background: var(--color-background);\n    background-repeat: no-repeat;\n    color: var(--color-text);\n    overflow-x: hidden;\n    margin: 0;\n  font-family: 'Lato', 'Roboto', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  }\n\n * {\n     margin: 0;\n     box-sizing: border-box;}\n`\n","import { useRef, useEffect, useState } from \"react\"\n\nconst useLocalStorageState = (\n    key,\n    defaultValue = \"\",\n    { serialize = JSON.stringify, deserialize = JSON.parse } = {}\n) => {\n    const prevKeyRef = useRef(key) // useRef to not rerender\n\n    const [state, setState] = useState(() => {\n        const valuesToLocalStorage = window.localStorage.getItem(key)\n        if (valuesToLocalStorage) {\n            return deserialize(valuesToLocalStorage)\n        }\n        return typeof defaultValue === \"function\"\n            ? defaultValue()\n            : defaultValue\n    })\n\n    useEffect(() => {\n        const prevKey = prevKeyRef.current\n        if (prevKey !== key) {\n            window.localStorage.removeItem(prevKey)\n        }\n        prevKeyRef.current = key\n\n        window.localStorage.setItem(key, serialize(state))\n    }, [key, serialize, state])\n\n    return [state, setState]\n}\n\nexport default useLocalStorageState\n","import styled from \"styled-components\"\n\nexport default styled.svg.attrs({\n    version: \"1.1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n})``\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Icon from \"./icon\"\n\nconst Svg = styled(Icon)`\n    width: 24px;\n    height: 24px;\n`\n\nexport const Sun = ({ className }) => (\n    <Svg viewBox=\"0 0 24 24\" className={className} fill=\"currentColor\">\n        <rect width=\"2\" height=\"2\" x=\"9\" y=\"2\"></rect>\n        <rect\n            width=\"2\"\n            height=\"2\"\n            x=\"13.88\"\n            y=\"4.051\"\n            transform=\"rotate(45.02 14.88 5.051)\"\n        ></rect>\n        <rect width=\"2\" height=\"2\" x=\"16\" y=\"9\"></rect>\n        <rect\n            width=\"2\"\n            height=\"2\"\n            x=\"13.949\"\n            y=\"14.019\"\n            transform=\"rotate(-135.02 14.95 15.019)\"\n        ></rect>\n        <rect width=\"2\" height=\"2\" x=\"9\" y=\"16\"></rect>\n        <rect\n            width=\"2\"\n            height=\"2\"\n            x=\"3.98\"\n            y=\"13.949\"\n            transform=\"rotate(-134.98 4.98 14.95)\"\n        ></rect>\n        <rect width=\"2\" height=\"2\" x=\"2\" y=\"9\"></rect>\n        <rect\n            width=\"2\"\n            height=\"2\"\n            x=\"4.05\"\n            y=\"4.121\"\n            transform=\"rotate(44.98 5.05 5.12)\"\n        ></rect>\n        <path d=\"M10,6 C7.8,6 6,7.8 6,10 C6,12.2 7.8,14 10,14 C12.2,14 14,12.2 14,10 C14,7.8 12.2,6 10,6 Z\" />\n    </Svg>\n)\n\nexport const Moon = ({ className }) => (\n    <Svg viewBox=\"0 0 24 24\" className={className} fill=\"currentColor\">\n        <path d=\"M8,2 C4.5,2.9 2,6.1 2,9.9 C2,14.4 5.6,18 10.1,18 C13.9,18 17,15.5 18,12 C11.9,13.7 6.3,8.1 8,2 Z\" />\n    </Svg>\n)\n","import React from \"react\"\nimport { useEffect } from \"react\"\nimport styled from \"styled-components\"\n\nimport useLocalStorageState from \"../../hooks/useLocalStorageState\"\nimport { Sun, Moon } from \"./themeModeIcon\"\n\nconst StyledHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background: var(--color-background);\n    box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px;\n    padding: 10px 2rem;\n    color: var(--color-primary);\n    font-family: \"Raleway\", sans-serif;\n`\n\nconst H2 = styled.h2`\n    font-weight: 400;\n    font-size: 2rem;\n    margin: 0;\n`\n\nconst Link = styled.div`\n    font-size: 1.5rem;\n    text-decoration: none;\n    cursor: pointer;\n    color: var(--color-primary);\n`\n\nconst Button = styled.div`\n    cursor: pointer;\n    display: flex;\n    align-items: end;\n    margin-right: 1em;\n    margin-left: auto;\n    height: 100%;\n`\n\nconst Header = ({ switchTheme, setUser }) => {\n    const [theme, setTheme] = useLocalStorageState(\"theme\", \"dark\")\n\n    useEffect(() => {\n        switchTheme(theme)\n    }, [switchTheme, theme])\n\n    const logOut = () => {\n        window.localStorage.removeItem(\"loggedUser\")\n        return setUser(null)\n    }\n\n    return (\n        <StyledHeader>\n            <H2>My Turn</H2>\n            <Button\n                onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n            >\n                {theme === \"light\" ? <Moon /> : <Sun />}\n            </Button>\n            <div onClick={logOut}>\n                <Link>log-out</Link>\n            </div>\n        </StyledHeader>\n    )\n}\n\nexport default Header\n","import styled from \"styled-components\"\n\nexport const Tooltip = styled.div`\n    position: relative;\n`\n\nexport const TooltipText = styled.span`\n    visibility: hidden;\n    background-color: var(--color-header-background);\n    color: var(--color-primary);\n    font-weight: bold;\n    box-shadow: 2px 2px 1px rgb(0 0 0 / 30%);\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 10px;\n    position: absolute;\n    top: -2rem;\n    z-index: 9999;\n\n    ${Tooltip}:hover & {\n        visibility: visible;\n    }\n`\n","import styled, { css } from \"styled-components\"\n\nexport const Legend = styled.div`\n    padding: 20px;\n    @media (max-width: 800px) {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-evenly;\n        flex-wrap: wrap;\n        padding-bottom: 0;\n    }\n`\n\nexport const LegendItem = styled.div`\n    font-weight: bold;\n    display: flex;\n    align-items: center;\n    padding-bottom: 0.5rem;\n`\n\nexport const ItemDot = styled.div`\n    width: 18px;\n    height: 18px;\n    margin-right: 10px;\n    // border-radius: 50%;\n    background-color: ${(props) => `var(${props.color})`};\n`\n\nexport const ItemDotSelection = styled(ItemDot)`\n    // box-shadow: ${(props) =>\n        props.isSelected && \"2px 2px 0 rgba(0 0 0 / 0.7)\"};\n    transform: ${(props) =>\n        props.isSelected && \"scale(1.5) translateY(-2px) rotate(90deg)\"};\n`\n\nexport const AddItem = styled.div`\n    width: 100%;\n    background: var(--color-selected);\n    padding: 0px 10px;\n    font-weight: bold;\n    font-size: 1.8rem;\n    border-radius: 5px;\n    text-align: center;\n    cursor: pointer;\n`\n","import React from \"react\"\n\nexport function useMediaQuery(query) {\n    const [matches, setMatches] = React.useState(false)\n\n    React.useEffect(() => {\n        const media = window.matchMedia(query)\n        if (media.matches !== matches) {\n            setMatches(media.matches)\n        }\n\n        const listener = () => {\n            setMatches(media.matches)\n        }\n\n        media.addEventListener(\"change\", listener)\n\n        return () => media.removeEventListener(\"change\", listener)\n    }, [matches, query])\n\n    return matches\n}\n","import React, { useReducer } from \"react\"\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case \"TOGGLE_EDITABLE\":\n        return {\n            ...state,\n            isEditable: !state.isEditable,\n        }\n    case \"IS_NOT_EDITABLE\":\n        return {\n            ...state,\n            isEditable: false,\n        }\n    case \"SET_TURNS\":\n        return {\n            ...state,\n            turns: action.payload,\n        }\n    case \"ADD_NEW_MEMBER\":\n        return {\n            ...state,\n            turns: [...state.turns, action.payload],\n        }\n    case \"GET_SHIFT\":\n        return {\n            ...state,\n            acceptedShift: action.payload,\n        }\n    case \"UPDATE_SHIFT\":\n        return {\n            ...state,\n            acceptedShift: [...action.payload]\n        }\n    default:\n        return state\n    }\n}\n\nconst initialState = {\n    isEditable: false,\n    turns: [],\n    acceptedShift: [],\n    notification: null,\n}\n\nexport const ComponentContext = React.createContext(initialState)\n\nexport const TurnsProvider = (props) => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    return (\n        <ComponentContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </ComponentContext.Provider>\n    )\n}\n","import styled from \"styled-components\"\n\nexport const ModalContainer = styled.div`\n    background-color: var(--color-selected);\n    padding: 1rem;\n    border-radius: 5px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: flex;\n    z-index: 200;\n    box-shadow: 8px 8px 2px rgb(0 0 0 / 30%);\n`\n\nexport const ModalForm = styled.form`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const ModalInput = styled.input`\n    width: 100%;\n    padding: 0.5rem 1rem;\n    display: block;\n    background: 0 0;\n    color: var(--color-primary);\n    line-height: 1.2;\n    outline: none;\n    border: none;\n    border-bottom: 1px solid var(--color-background);\n    font-size: 1rem;\n    margin-bottom: 1rem;\n\n    &::placeholder {\n        color: var(--color-primary);\n    }\n`\n\nexport const ModalSelectInput = styled.select`\n    width: 100%;\n    padding: 0.5rem 1rem;\n    display: block;\n    background: 0 0;\n    color: var(--color-primary);\n    line-height: 1.2;\n    outline: none;\n    border: none;\n    border-bottom: 1px solid var(--color-background);\n    font-size: 1rem;\n    margin-bottom: 1rem;\n`\n\nexport const ModalButton = styled.button`\n    background: 0 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0 1.2rem;\n    width: 40%;\n    font-size: 1rem;\n    text-transform: uppercase;\n    cursor: pointer;\n    margin: 0 15px;\n    font-weight: bold;\n    transition: all 200ms;\n    border: none;\n`\n\nexport const ModalButtonAdd = styled(ModalButton)`\n    color: var(--color-green1);\n    :hover {\n        color: var(--color-primary);\n    }\n`\n\nexport const ModalButtonClose = styled(ModalButton)`\n    color: var(--color-text);\n    :hover {\n        color: var(--color-secondary);\n    }\n`\n\nexport const ModalButtonDelete = styled(ModalButton)`\n    color: var(--color-orange1);\n    :hover {\n        color: var(--color-primary);\n    }\n`\n\nexport const ModalBackground = styled.div`\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: var(--gradient-background);\n    backdrop-filter: blur(5px);\n    z-index: 199;\n    transition: all 500ms;\n`\n\nexport const ModalColorsGroup = styled.div`\n    display: flex;\n    width: 100%;\n    padding: 0.5rem 1rem;\n    border-bottom: 1px solid var(--color-background);\n    font-size: 1rem;\n    margin-bottom: 1rem;\n`\n","const storageKey = \"loggedUser\"\n\nconst saveUser = (user) =>\n    localStorage.setItem(storageKey, JSON.stringify(user))\n\nconst loadUser = () => JSON.parse(localStorage.getItem(storageKey))\n\nconst logoutUser = () => localStorage.removeItem(storageKey)\n\nconst getAxiosConfig = () => {\n    return {\n        headers: { Authorization: `bearer ${loadUser().token}` }\n    }\n}\n\nexport default {\n    saveUser,\n    loadUser,\n    logoutUser,\n    getAxiosConfig\n}\n","import axios from \"axios\"\nimport storage from \"../utils/storage.js\"\nconst baseUrl = \"/api/team\"\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst register = async (credential) => {\n    const response = await axios.post(baseUrl, credential)\n    return response.data\n}\n\nconst getAcceptedShift = async () => {\n    const response = await axios.get(\n        `${baseUrl}/accepted-shift/`,\n        storage.getAxiosConfig()\n    )\n    return response.data\n}\n\nconst updateAcceptedShift = async (newAcceptedShift) => {\n    const response = await axios.put(\n        `${baseUrl}/accepted-shift/`,\n        newAcceptedShift,\n        storage.getAxiosConfig()\n    )\n    return response.data\n}\n\nexport default {\n    getAll,\n    register,\n    getAcceptedShift,\n    updateAcceptedShift,\n}\n","export default [\n    \"--color-yellow1\",\n    \"--color-orange1\",\n    \"--color-green1\",\n    \"--color-green2\",\n    \"--color-blue1\",\n    \"--color-blue2\",\n    \"--color-purple1\",\n    \"--color-purple2\",\n]\n","import React from \"react\"\nimport { ComponentContext } from \"../../context/turnsContext\"\nimport {\n    ModalForm,\n    ModalInput,\n    ModalButtonAdd,\n    ModalContainer,\n    ModalBackground,\n    ModalButtonClose,\n    ModalColorsGroup,\n} from \"../modal/modal.styles\"\nimport { ItemDotSelection } from \"./legend.style\"\nimport teamService from \"../../services/teams\"\nimport colors from \"../../constants/color\"\n\nconst AddAcceptedShift = ({ isOpen, setIsOpen }) => {\n    const [shiftName, setShiftName] = React.useState(\"\")\n    const [color, setColor] = React.useState(\"--color-blue1\")\n    const [hours, setHours] = React.useState(\"\")\n    const { state, dispatch } = React.useContext(ComponentContext)\n    const { acceptedShift } = state\n\n    const handleSubmitNewShift = async (event) => {\n        event.preventDefault()\n\n        if (shiftName.length <= 0 || color.length <= 0 || hours === 0)\n            return alert(\"You need to choose a name a color and a duration\")\n\n        if (\n            acceptedShift.findIndex(\n                (element) => element.shiftName === shiftName\n            ) !== -1\n        )\n            return alert(\"name must be unique\")\n\n        const newAcceptedShift = {\n            shiftName,\n            color,\n            hours,\n        }\n\n        const newObject = await teamService.updateAcceptedShift([\n            ...acceptedShift,\n            newAcceptedShift,\n        ])\n        dispatch({ type: \"UPDATE_SHIFT\", payload: newObject.acceptedShift })\n        setIsOpen(!isOpen)\n    }\n\n    return (\n        <ModalBackground>\n            <ModalContainer>\n                <ModalForm onSubmit={handleSubmitNewShift}>\n                    <ModalInput\n                        type=\"text\"\n                        name=\"shiftName\"\n                        value={shiftName}\n                        placeholder=\"shift name\"\n                        onChange={({ target }) => setShiftName(target.value)}\n                    />\n                    <ModalInput\n                        type=\"number\"\n                        name=\"hours\"\n                        min=\"0\"\n                        max=\"24\"\n                        value={hours}\n                        placeholder=\"duration in hours\"\n                        onChange={({ target }) => setHours(target.value)}\n                    />\n                    <ModalColorsGroup style={{ display: \"flex\" }}>\n                        {colors.map((c) => {\n                            let isSelected = true\n                            c === color\n                                ? (isSelected = true)\n                                : (isSelected = false)\n                            return (\n                                <ItemDotSelection\n                                    key={c}\n                                    color={c}\n                                    isSelected={isSelected}\n                                    onClick={() => setColor(c)}\n                                />\n                            )\n                        })}\n                    </ModalColorsGroup>\n                    <div style={{ display: \"flex\" }}>\n                        <ModalButtonClose onClick={() => setIsOpen(!isOpen)}>\n                            close\n                        </ModalButtonClose>\n                        <ModalButtonAdd type=\"submit\">add</ModalButtonAdd>\n                    </div>\n                </ModalForm>\n            </ModalContainer>\n        </ModalBackground>\n    )\n}\n\nexport default AddAcceptedShift\n","import React from \"react\"\nimport { ComponentContext } from \"../../context/turnsContext\"\nimport teamService from \"../../services/teams\"\nimport styled from \"styled-components\"\nimport {\n    ModalBackground,\n    ModalContainer,\n    ModalButtonClose,\n    ModalButtonDelete,\n} from \"../modal/modal.styles\"\n\nconst RemoveIcon = styled.div`\n    font-size: 0.8rem;\n    padding-left: 10px;\n    cursor: pointer;\n`\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nconst RemoveAcceptedShift = ({ shiftName }) => {\n    const [isOpen, setIsOpen] = React.useState(false)\n    const { state, dispatch } = React.useContext(ComponentContext)\n\n    const removeItem = async (shiftName) => {\n        const newAcceptedShifts = state.acceptedShift.filter(\n            (shift) => shift.shiftName !== shiftName\n        )\n\n        const newObject = await teamService.updateAcceptedShift(\n            newAcceptedShifts\n        )\n        setIsOpen(!isOpen)\n        return dispatch({\n            type: \"UPDATE_SHIFT\",\n            payload: newObject.acceptedShift,\n        })\n    }\n    return (\n        <>\n            <RemoveIcon onClick={() => setIsOpen(!isOpen)}>❌</RemoveIcon>\n            {isOpen && (\n                <ModalBackground>\n                    <ModalContainer\n                        style={{ flexDirection: \"column\", textAlign: \"center\" }}\n                    >\n                        ⚠️\n                        <div\n                            style={{\n                                fontSize: \"1.2rem\",\n                                lineHeight: \"1.2\",\n                                padding: \"1rem 0\",\n                                marginBottom: \"1rem\",\n                                color: \"var(--color-primary)\",\n                            }}\n                        >\n                            Are you sure to delete {shiftName}?\n                        </div>\n                        <div\n                            style={{ display: \"flex\", justifyItems: \"center\" }}\n                        >\n                            <ModalButtonClose\n                                onClick={() => setIsOpen(!isOpen)}\n                            >\n                                close\n                            </ModalButtonClose>\n                            <ModalButtonDelete\n                                onClick={() => removeItem(shiftName)}\n                            >\n                                delete\n                            </ModalButtonDelete>\n                        </div>\n                    </ModalContainer>\n                </ModalBackground>\n            )}\n        </>\n    )\n}\n\nexport default RemoveAcceptedShift\n","import React from \"react\"\nimport { ComponentContext } from \"../../context/turnsContext\"\nimport {\n    ModalForm,\n    ModalInput,\n    ModalButtonAdd,\n    ModalContainer,\n    ModalBackground,\n    ModalButtonClose,\n    ModalColorsGroup,\n} from \"../modal/modal.styles\"\nimport { ItemDotSelection } from \"./legend.style\"\nimport teamService from \"../../services/teams\"\nimport colors from \"../../constants/color\"\n\nconst UpdateAcceptedShift = ({\n    isOpen,\n    setIsOpen,\n    oldShift,\n    oldColor,\n    oldHours,\n}) => {\n    console.log(oldShift, oldColor, oldHours)\n    const [shiftName, setShiftName] = React.useState(oldShift)\n    const [color, setColor] = React.useState(oldColor)\n    const [hours, setHours] = React.useState(oldHours)\n    const { state, dispatch } = React.useContext(ComponentContext)\n    const { acceptedShift } = state\n\n    const updatingAcceptedShift = acceptedShift.filter(\n        (shift) => shift.shiftName !== oldShift\n    )\n\n    const handleSubmitNewShift = async (event) => {\n        event.preventDefault()\n\n        if (shiftName.length <= 0 || color.length <= 0 || hours === 0)\n            return alert(\"You need to choose a name a color and a duration\")\n\n        if (\n            updatingAcceptedShift.findIndex(\n                (element) => element.shiftName === shiftName\n            ) !== -1\n        )\n            return alert(\"name must be unique\")\n\n        const newAcceptedShift = {\n            shiftName,\n            color,\n            hours,\n        }\n\n        const updatedAcceptedShift = [\n            ...updatingAcceptedShift,\n            newAcceptedShift,\n        ]\n\n        const newObject = await teamService.updateAcceptedShift(\n            updatedAcceptedShift\n        )\n        dispatch({ type: \"UPDATE_SHIFT\", payload: newObject.acceptedShift })\n        setIsOpen(!isOpen)\n    }\n\n    return (\n        <ModalBackground>\n            <ModalContainer>\n                <ModalForm onSubmit={handleSubmitNewShift}>\n                    <ModalInput\n                        type=\"text\"\n                        name=\"shiftName\"\n                        value={shiftName}\n                        placeholder=\"shift name\"\n                        onChange={({ target }) => setShiftName(target.value)}\n                    />\n                    <ModalInput\n                        type=\"number\"\n                        name=\"hours\"\n                        min=\"0\"\n                        max=\"24\"\n                        value={hours}\n                        placeholder=\"duration in hours\"\n                        onChange={({ target }) => setHours(target.value)}\n                    />\n                    <ModalColorsGroup style={{ display: \"flex\" }}>\n                        {colors.map((c) => {\n                            let isSelected = true\n                            c === color\n                                ? (isSelected = true)\n                                : (isSelected = false)\n                            return (\n                                <ItemDotSelection\n                                    key={c}\n                                    color={c}\n                                    isSelected={isSelected}\n                                    onClick={() => setColor(c)}\n                                />\n                            )\n                        })}\n                    </ModalColorsGroup>\n                    <div style={{ display: \"flex\" }}>\n                        <ModalButtonClose onClick={() => setIsOpen(!isOpen)}>\n                            close\n                        </ModalButtonClose>\n                        <ModalButtonAdd type=\"submit\">update</ModalButtonAdd>\n                    </div>\n                </ModalForm>\n            </ModalContainer>\n        </ModalBackground>\n    )\n}\n\nexport default UpdateAcceptedShift\n","import React from \"react\"\nimport { Tooltip, TooltipText } from \"../tooltip/tooltip\"\nimport { Legend, LegendItem, ItemDot, AddItem } from \"./legend.style\"\n\nimport { useMediaQuery } from \"../../hooks/useMediaQuery\"\nimport { ComponentContext } from \"../../context/turnsContext\"\nimport AddAcceptedShift from \"./addItem\"\nimport RemoveAcceptedShift from \"./removeAcceptedShift\"\nimport UpdateAcceptedShift from \"./updateItem\"\n\nconst AcceptedSchiftLegend = () => {\n    const [isAdding, setIsAdding] = React.useState(false)\n    const [isUpdating, setIsUpdating] = React.useState(false)\n    const [oldAcceptedShidt, setOldAcceptedShift] = React.useState({})\n    const { state, dispatch } = React.useContext(ComponentContext)\n    let isPageWide = useMediaQuery(\"(min-width: 800px)\")\n\n    if (!state.acceptedShift) return <LegendItem>Loading...</LegendItem>\n\n    const maxAcceptedShift = state.acceptedShift.length === 8\n\n    return (\n        <Legend>\n            {state.acceptedShift.map((element) => {\n                return (\n                    <LegendItem key={element._id}>\n                        <ItemDot color={element.color} />\n                        <Tooltip>\n                            {element.shiftName}\n                            {isPageWide ? (\n                                <TooltipText>{element.hours}h</TooltipText>\n                            ) : (\n                                <span style={{ fontWeight: \"initial\" }}>\n                                    {\" \"}\n                                    {element.hours}h\n                                </span>\n                            )}\n                        </Tooltip>\n                        {state.isEditable && (\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    marginLeft: \"auto\",\n                                    padding: \"0 5px\",\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        cursor: \"pointer\",\n                                    }}\n                                    onClick={() => {\n                                        setOldAcceptedShift({\n                                            shiftName: element.shiftName,\n                                            color: element.color,\n                                            hours: element.hours,\n                                        })\n                                        setIsUpdating(!isUpdating)\n                                    }}\n                                >\n                                    ✏️\n                                </div>\n                                {isUpdating && (\n                                    <UpdateAcceptedShift\n                                        isOpen={isUpdating}\n                                        setIsOpen={setIsUpdating}\n                                        oldShift={oldAcceptedShidt.shiftName}\n                                        oldColor={oldAcceptedShidt.color}\n                                        oldHours={oldAcceptedShidt.hours}\n                                    />\n                                )}\n                                <RemoveAcceptedShift\n                                    shiftName={element.shiftName}\n                                />\n                            </div>\n                        )}\n                    </LegendItem>\n                )\n            })}\n            {!maxAcceptedShift && state.isEditable ? (\n                <>\n                    <AddItem onClick={() => setIsAdding(!isAdding)}>+</AddItem>\n                </>\n            ) : null}\n            {isAdding ? (\n                <AddAcceptedShift isOpen={isAdding} setIsOpen={setIsAdding} />\n            ) : null}\n        </Legend>\n    )\n}\n\nexport default AcceptedSchiftLegend\n","import React from \"react\"\nimport styled from \"styled-components\"\n\n// import Calendar from './calendar/Calendar'\n\nimport AcceptedSchiftLegend from \"./acceptedShiftLegend/acceptedShiftLegend\"\n\nconst StyledSideBar = styled.div`\n    max-width: 18rem;\n    @media (max-width: 800px) {\n        max-width: inherit;\n    }\n`\n\nconst Spacer = styled.div`\n    height: 59px;\n    @media (max-width: 800px) {\n        display: none;\n    }\n`\n\nconst Sidebar = () => {\n    return (\n        <StyledSideBar>\n            {/* <Calendar /> */}\n            <Spacer />\n            <AcceptedSchiftLegend />\n        </StyledSideBar>\n    )\n}\n\nexport default Sidebar\n","import styled, { css } from \"styled-components\"\n\nexport const Frame = styled.div`\n    display: flex;\n    flex-direction: column;\n    /* margin-left: 18rem; */\n    height: 100%;\n    width: 100%;\n    padding-right: 30px;\n    @media (max-width: 800px) {\n        padding: 0 10px;\n    }\n`\n\nexport const Container = styled.div`\n    @media (max-width: 800px) {\n        overflow-x: scroll;\n    }\n`\nexport const Header = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 20px 15px;\n    color: var(--color-primary);\n    letter-spacing: 2px;\n    /* background: var(--background-main); */\n    /* overflow-y: auto; */\n`\n\nexport const Button = styled.div`\n    cursor: pointer;\n    margin: 0 15px;\n`\n\nexport const ButtonPrimary = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 30px;\n    margin-left: 20px;\n    padding: 10px 20px;\n    color: var(--color-primary);\n    font-weight: bold;\n    font-size: 1.3rem;\n    border: var(--color-border);\n    cursor: pointer;\n    :hover {\n        background: var(--color-primary);\n        color: var(--color-background);\n        border: 2px solid var(--color-primary);\n    }\n    display: none;\n    ${(props) =>\n        props.isEditable &&\n        css`\n            display: inherit;\n        `}\n`\n\nexport const ButtonSecondary = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 30px;\n    margin-left: 20px;\n    padding: 10px 20px;\n    color: var(--color-green1);\n    font-weight: bold;\n    font-size: 1.3rem;\n    border: var(--color-border);\n    cursor: pointer;\n    :hover {\n        background: var(--color-green1);\n        color: #ededed;\n        border: 2px solid var(--color-green1);\n    }\n`\nexport const Day = styled.div`\n    /* width: 14.2%; */\n    height: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    user-select: none;\n    /* border-left: var(--color-border) */\n\n    ${(props) =>\n        props.isToday &&\n        css`\n            background-color: var(--color-selected);\n        `}\n\n    ${(props) =>\n        props.isSelected &&\n        css`\n            background-color: var(--color-selected);\n        `}\n`\n\nexport const Table = styled.table`\n    border-collapse: collapse;\n    width: 100%;\n    /* background: var(--background-main); */\n    @media (max-width: 800px) {\n        margin-bottom: 20px;\n    }\n`\n\nexport const TableHead = styled.thead``\n\nexport const TableRow = styled.tr`\n    border: var(--color-border);\n    overflow: inherit;\n`\n\nexport const TableCell = styled.td`\n    border: var(--color-border);\n    font-weight: normal;\n    position: relative;\n    ${(props) =>\n        props.isToday &&\n        css`\n            background-color: var(--color-selected);\n        `};\n`\n\nexport const TableCellHeader = styled.th`\n    width: 2.8%;\n    border: var(--color-border);\n    ${(props) =>\n        props.isToday &&\n        css`\n            background-color: var(--color-selected);\n        `};\n    position: sticky;\n    position: -webkit-sticky; /* safari */\n    top: -2px;\n    background-color: var(--color-background);\n    z-index: 5;\n`\n\nexport const TableContent = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    cursor: pointer;\n    background-color: yellow;\n    cursor: pointer;\n    ${(props) => {\n        return css`\n            background-color: var(${props.color});\n        `\n    }}}\n`\n\nexport const Names = styled.div`\n    padding: 10px 20px;\n    font-size: 1.5rem;\n    @media (max-width: 768px) {\n        font-size: 1rem;\n    }\n`\n\nexport const DeleteButton = styled.div`\n    font-size: 1rem;\n    display: none;\n    color: red;\n    ${Names}:hover & {\n        display: block;\n        cursor: pointer;\n    }\n`\n","export function getStartDayOfMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay()\n}\n\nexport function isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n}\n","export const DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_OF_THE_WEEK = [\"L\", \"M\", \"X\", \"G\", \"V\", \"S\", \"D\"]\nexport const MONTHS = [\n    \"gennaio\",\n    \"febbraio\",\n    \"marzo\",\n    \"aprile\",\n    \"maggio\",\n    \"giugno\",\n    \"luglio\",\n    \"agosto\",\n    \"settembre\",\n    \"ottobre\",\n    \"novembre\",\n    \"dicembre\",\n]\n","import { isLeapYear, getStartDayOfMonth } from \"./utility\"\nimport { DAYS, DAYS_LEAP } from \"./Constants\"\nimport { useReducer } from \"react\"\n\nfunction updateDate(date) {\n    return {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n        startDay: getStartDayOfMonth(date),\n    }\n}\n\nconst actionTypes = {\n    nextMonth: \"next_month\",\n    previousMonth: \"previous_month\",\n    update: \"update\",\n    newDate: \"new_date\",\n}\n\nfunction dateReducer(state, { type, payload }) {\n    switch (type) {\n    case actionTypes.nextMonth: {\n        const newDate = new Date(state.year, state.month + 1, state.day)\n        return {\n            date: newDate,\n            ...updateDate(newDate),\n        }\n    }\n    case actionTypes.previousMonth: {\n        const newDate = new Date(state.year, state.month - 1, state.day)\n        return {\n            ...state,\n            date: newDate,\n            ...updateDate(newDate),\n        }\n    }\n    case actionTypes.update: {\n        return {\n            ...state,\n            day: state.date.getDate(),\n            month: state.date.getMonth(),\n            year: state.date.getFullYear(),\n            setStartday: getStartDayOfMonth(state.date),\n        }\n    }\n    case actionTypes.newDate: {\n        const { year, month, day } = payload\n        const newDate = new Date(year, month, day)\n        return {\n            ...state,\n            date: newDate,\n            ...updateDate(newDate),\n        }\n    }\n    default: {\n        throw new Error(`Unsupported type: ${type}`)\n    }\n    }\n}\n\nconst today = new Date()\n\nconst initialState = {\n    date: today,\n    day: today.getDate(),\n    month: today.getMonth(),\n    year: today.getFullYear(),\n    startDay: getStartDayOfMonth(today),\n}\n\nfunction useDate({ reducer = dateReducer } = {}) {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    const { date, day, month, year, startDay } = state\n\n    const days = isLeapYear(date.getFullYear()) ? DAYS_LEAP : DAYS\n\n    function isToday(day) {\n        return day === today.getDate()\n    }\n\n    const nextMonth = () => {\n        dispatch({ type: actionTypes.nextMonth })\n    }\n\n    const previousMonth = () => {\n        dispatch({ type: actionTypes.previousMonth })\n    }\n\n    const newDate = (year, month, day) => {\n        dispatch({\n            type: actionTypes.newDate,\n            payload: { year, month, day },\n        })\n    }\n\n    return {\n        isToday,\n        days,\n        nextMonth,\n        previousMonth,\n        newDate,\n        date,\n        day,\n        month,\n        year,\n        startDay,\n    }\n}\n\nexport default useDate\n","import axios from \"axios\"\nimport storage from \"../utils/storage\"\nconst baseUrl = \"/api/schedule\"\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl, storage.getAxiosConfig())\n    return request.data\n}\n\nconst getYear = async (year) => {\n    const request = await axios.get(`${baseUrl}/${year}`, storage.getAxiosConfig())\n    return request.data\n}\n\nconst getMonth = async (year, month) => {\n    const request = await axios.get(\n        `${baseUrl}/${year}/${month + 1}`,\n        storage.getAxiosConfig()\n    )\n    return request.data\n}\n\nconst addNewMember = async (newObject, year, month) => {\n    /*\n     * body of the request\n     * {\n     *   teamName: current loggedin team,\n     *   teamId: teamId,\n     *   name: name of the team member to add\n     *   days: []       OPTIONAL\n     * }\n     */\n    const request = await axios.post(\n        `${baseUrl}/${year}/${month + 1}`,\n        newObject,\n        storage.getAxiosConfig()\n    )\n    return request.data\n}\n\nconst update = async (year, id, newObject) => {\n    const request = await axios.put(\n        `${baseUrl}/${year}/${id}`,\n        newObject,\n        storage.getAxiosConfig()\n    )\n    return request.data\n}\n\nconst removeTeamMember = async (year, id) => {\n    const request = await axios.delete(`${baseUrl}/${year}/${id}`, storage.getAxiosConfig())\n    return request.data\n}\n\nexport default {\n    getAll,\n    getYear,\n    getMonth,\n    addNewMember,\n    update,\n    removeTeamMember,\n}\n","import React from \"react\"\nimport { TableContent } from \"../calendar/calendar.style\"\n\nexport const coloredDiv = (turn, acceptedShift) => {\n    if (!acceptedShift) return <TableContent />\n\n    acceptedShift = acceptedShift.find((shift) => shift.shiftName === turn)\n\n    if (acceptedShift)\n        return <TableContent color={acceptedShift.color}></TableContent>\n}\n","import React from \"react\"\nimport {\n    ModalContainer,\n    ModalBackground,\n    ModalForm,\n    ModalInput,\n    ModalButtonAdd,\n    ModalButtonClose,\n} from \"../modal/modal.styles\"\nimport scheduleService from \"../../services/scheduledTime\"\nimport { ComponentContext } from \"../../context/turnsContext\"\n\nconst AddNewRowModal = ({ year, month, isOpen, setIsOpen }) => {\n    const [name, setName] = React.useState(\"\")\n    const { state, dispatch } = React.useContext(ComponentContext)\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n\n        if (name === \"\" || name === null) return\n        if (name.length === 0) return alert(\"Name can't bi empty\")\n\n        const newMember = {\n            name,\n        }\n        const addedMember = await scheduleService.addNewMember(\n            newMember,\n            year,\n            month\n        )\n        dispatch({ type: \"ADD_NEW_MEMBER\", payload: addedMember })\n        setIsOpen(!isOpen)\n    }\n\n    return (\n        <ModalBackground>\n            <ModalContainer>\n                <ModalForm onSubmit={handleSubmit}>\n                    <ModalInput\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        placeholder=\"Name\"\n                        onChange={({ target }) => setName(target.value)}\n                    />\n                    <div style={{ display: \"flex\" }}>\n                        <ModalButtonClose onClick={() => setIsOpen(!isOpen)}>\n                            close\n                        </ModalButtonClose>\n                        <ModalButtonAdd type=\"submit\">add</ModalButtonAdd>\n                    </div>\n                </ModalForm>\n            </ModalContainer>\n        </ModalBackground>\n    )\n}\n\nexport default AddNewRowModal\n","import React from \"react\"\nimport AddNewRowModal from \"../calendar/addNewRowModal.jsx\"\nimport { ComponentContext } from \"../../context/turnsContext\"\nimport useDate from \"../../hooks/useDate/useDate.js\"\nimport { MONTHS } from \"../../hooks/useDate/Constants.js\"\nimport scheduleService from \"../../services/scheduledTime\"\n\nimport {\n    Frame,\n    Container,\n    Header,\n    Button,\n    ButtonPrimary,\n    ButtonSecondary,\n    Day,\n    Table,\n    TableCellHeader,\n    TableHead,\n    TableRow,\n} from \"./calendar.style\"\n\nconst DesktopTable = ({ isOpen, setIsOpen, putValuesToTable }) => {\n    const { state, dispatch } = React.useContext(ComponentContext)\n    const {\n        previousMonth,\n        nextMonth,\n        month,\n        days,\n        year,\n        isToday,\n        day,\n    } = useDate()\n\n    React.useEffect(() => {\n        scheduleService.getMonth(year, month).then((data) => {\n            dispatch({ type: \"SET_TURNS\", payload: data })\n        })\n    }, [year, month])\n\n    return (\n        <Frame>\n            <Header>\n                <Button onClick={() => previousMonth()}>&lt;</Button>\n                <div>\n                    {MONTHS[month].toUpperCase()} {year}\n                </div>\n                <Button onClick={() => nextMonth()}>&gt;</Button>\n            </Header>\n            <Container>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            {Array(days[month] + 1)\n                                .fill(null)\n                                .map((_, d) => {\n                                    return (\n                                        <TableCellHeader\n                                            key={d}\n                                            isToday={isToday(d)}\n                                        >\n                                            <Day isSelected={d === day}>\n                                                {d > 0 ? d : \"\"}\n                                            </Day>\n                                        </TableCellHeader>\n                                    )\n                                })}\n                        </TableRow>\n                    </TableHead>\n                    <tbody>\n                        {state.turns.map((worker) => {\n                            return (\n                                <TableRow key={worker._id}>\n                                    {putValuesToTable(worker, days[month] + 1)}\n                                </TableRow>\n                            )\n                        })}\n                    </tbody>\n                </Table>\n            </Container>\n            <div\n                style={{\n                    display: \"flex\",\n                    marginLeft: \"auto\",\n                    justifyContent: \"center\",\n                    alignContent: \"space-around\",\n                    marginTop: \"40px\",\n                }}\n            >\n                <ButtonPrimary\n                    onClick={() => setIsOpen(!isOpen)}\n                    isEditable={state.isEditable}\n                >\n                    Add new\n                </ButtonPrimary>\n                <ButtonSecondary\n                    onClick={() => dispatch({ type: \"TOGGLE_EDITABLE\" })}\n                >\n                    {state.isEditable ? \"Done\" : \"Edit\"}\n                </ButtonSecondary>\n            </div>\n            {isOpen ? (\n                <AddNewRowModal\n                    year={year}\n                    month={month}\n                    isOpen={isOpen}\n                    setIsOpen={setIsOpen}\n                />\n            ) : null}\n        </Frame>\n    )\n}\n\nexport default DesktopTable\n","import React from \"react\"\nimport AddNewRowModal from \"../calendar/addNewRowModal.jsx\"\nimport { ComponentContext } from \"../../context/turnsContext\"\nimport useDate from \"../../hooks/useDate/useDate.js\"\nimport { MONTHS } from \"../../hooks/useDate/Constants.js\"\nimport scheduleService from \"../../services/scheduledTime\"\n\nimport {\n    Frame,\n    Container,\n    Header,\n    Button,\n    ButtonPrimary,\n    ButtonSecondary,\n    Table,\n    TableCellHeader,\n    TableHead,\n    TableRow,\n    Names,\n    DeleteButton,\n} from \"./calendar.style\"\n\nconst MobileTable = ({\n    isOpen,\n    setIsOpen,\n    putValuesToTableMobile,\n    removeRow,\n}) => {\n    const { state, dispatch } = React.useContext(ComponentContext)\n    const { previousMonth, nextMonth, month, days, year } = useDate()\n\n    React.useEffect(() => {\n        scheduleService.getMonth(year, month).then((data) => {\n            dispatch({ type: \"SET_TURNS\", payload: data })\n        })\n    }, [year, month, dispatch])\n\n    function renderMobileTable() {\n        if (state.turns.length !== 0) {\n            return (\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCellHeader />\n                            {state.turns.map((worker) => {\n                                return (\n                                    <TableCellHeader key={worker._id}>\n                                        <Names>\n                                            {worker.name}\n                                            <DeleteButton\n                                                onClick={() =>\n                                                    removeRow(\n                                                        worker._id,\n                                                        worker.name\n                                                    )\n                                                }\n                                            >\n                                                delete\n                                            </DeleteButton>\n                                        </Names>\n                                    </TableCellHeader>\n                                )\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <tbody>\n                        {Array(days[month])\n                            .fill(null)\n                            .map((_, d) => {\n                                return (\n                                    <TableRow key={d}>\n                                        {putValuesToTableMobile(d)}\n                                    </TableRow>\n                                )\n                            })}\n                    </tbody>\n                </Table>\n            )\n        }\n\n        return (\n            <div style={{ marginBottom: \"40px\" }}>\n                Start by clicking on{\" \"}\n                <span style={{ fontWeight: \"bold\" }}>edit</span> and add a new\n                person\n            </div>\n        )\n    }\n    return (\n        <Frame>\n            <Header>\n                <Button onClick={() => previousMonth()}>&lt;</Button>\n                <div>\n                    {MONTHS[month].toUpperCase()} {year}\n                </div>\n                <Button onClick={() => nextMonth()}>&gt;</Button>\n            </Header>\n            <div\n                style={{\n                    display: \"flex\",\n                    marginLeft: \"auto\",\n                    marginBottom: \"20px\",\n                    justifyContent: \"center\",\n                    alignContent: \"space-around\",\n                }}\n            >\n                <ButtonPrimary\n                    onClick={() => setIsOpen(!isOpen)}\n                    isEditable={state.isEditable}\n                >\n                    Add new\n                </ButtonPrimary>\n                <ButtonSecondary\n                    onClick={() => dispatch({ type: \"TOGGLE_EDITABLE\" })}\n                >\n                    {state.isEditable ? \"Done\" : \"Edit\"}\n                </ButtonSecondary>\n            </div>\n            <Container>{renderMobileTable()}</Container>\n            <div\n                style={{\n                    display: \"flex\",\n                    marginLeft: \"auto\",\n                    marginBottom: \"20px\",\n                    justifyContent: \"center\",\n                    alignContent: \"space-around\",\n                }}\n            >\n                <ButtonPrimary\n                    onClick={() => setIsOpen(!isOpen)}\n                    isEditable={state.isEditable}\n                >\n                    Add new\n                </ButtonPrimary>\n                <ButtonSecondary\n                    onClick={() => dispatch({ type: \"TOGGLE_EDITABLE\" })}\n                >\n                    {state.isEditable ? \"Done\" : \"Edit\"}\n                </ButtonSecondary>\n            </div>\n            {isOpen ? (\n                <AddNewRowModal\n                    year={year}\n                    month={month}\n                    isOpen={isOpen}\n                    setIsOpen={setIsOpen}\n                />\n            ) : null}\n        </Frame>\n    )\n}\n\nexport default MobileTable\n","import React from \"react\"\nimport { Day, TableCell, Names, DeleteButton } from \"./calendar.style\"\n\nimport useDate from \"../../hooks/useDate/useDate\"\n// import useLocalStorageState from \"../../hooks/useLocalStorageState\"\nimport { useMediaQuery } from \"../../hooks/useMediaQuery\"\nimport { ComponentContext } from \"../../context/turnsContext.jsx\"\n\nimport scheduleService from \"../../services/scheduledTime\"\nimport { coloredDiv } from \"../utils/calendar\"\nimport DesktopTable from \"./calendar-desktopTable.jsx\"\nimport MobileTable from \"./calendar-mobileTable.jsx\"\n\nconst Calendar = () => {\n    const { day, year } = useDate()\n\n    const { state, dispatch } = React.useContext(ComponentContext)\n    const [isOpen, setIsOpen] = React.useState(false)\n    let isPageWide = useMediaQuery(\"(min-width: 800px)\")\n\n    if (!state.turns) return <div>Loading</div>\n\n    const putValuesToTable = (worker, monthLenght) => {\n        const { name, days, _id } = worker\n\n        let children = [\n            <TableCell\n                key={\n                    _id + \"tr\" ||\n                    `is-unique-enough ${Math.floor(Math.random() * 100)}`\n                }\n            >\n                <Names>\n                    {name}\n                    <DeleteButton onClick={() => removeRow(_id, name)}>\n                        delete\n                    </DeleteButton>\n                </Names>\n            </TableCell>,\n        ]\n        for (let i = 0; i < monthLenght - 1; i++) {\n            if (!days) {\n                children.push(\n                    <TableCell\n                        key={_id + i}\n                        onClick={() => cycleThrougShifts(_id, i, days[i])}\n                    />\n                )\n            } else if (days[i]) {\n                children.push(\n                    <TableCell\n                        key={_id + i}\n                        onClick={() => cycleThrougShifts(_id, i, days[i])}\n                    >\n                        {coloredDiv(days[i], state.acceptedShift)}\n                    </TableCell>\n                )\n            } else {\n                children.push(\n                    <TableCell\n                        key={_id + i}\n                        onClick={() => cycleThrougShifts(_id, i, days[i])}\n                    ></TableCell>\n                )\n            }\n        }\n        return children\n    }\n\n    const putValuesToTableMobile = (d) => {\n        let children = [\n            <TableCell key={\"dayTCell\" + d}>\n                <Day isSelected={d + 1 === day}>{d + 1}</Day>\n            </TableCell>,\n        ]\n\n        for (let worker of state.turns) {\n            if (!worker.days) {\n                children.push(\n                    <TableCell\n                        key={worker._id + d}\n                        onClick={() =>\n                            cycleThrougShifts(worker._id, d, worker.days[d])\n                        }\n                    />\n                )\n            } else if (worker.days[d]) {\n                children.push(\n                    <TableCell\n                        key={worker._id + d}\n                        onClick={() =>\n                            cycleThrougShifts(worker._id, d, worker.days[d])\n                        }\n                    >\n                        {coloredDiv(worker.days[d], state.acceptedShift)}\n                    </TableCell>\n                )\n            } else {\n                children.push(\n                    <TableCell\n                        key={worker._id + d}\n                        onClick={() =>\n                            cycleThrougShifts(worker._id, d, worker.days[d])\n                        }\n                    ></TableCell>\n                )\n            }\n        }\n        return children\n    }\n\n    // need to take the shiftNames array and add an empty string to have the\n    // empty cell onto the calendar\n    let shiftNames = []\n    if (state.acceptedShift)\n        shiftNames = state.acceptedShift.map((shift) => shift.shiftName)\n    shiftNames = shiftNames.concat(\"\")\n\n    const cycleThrougShifts = (workerId, scheduleIndex, schedule) => {\n        if (!state.isEditable) return\n        const acceptedShiftIndex = shiftNames.findIndex(\n            (shift) => shift === schedule\n        )\n\n        let index = acceptedShiftIndex\n\n        // -1 so when update newSchedule the index became 0\n        if (acceptedShiftIndex === shiftNames.length - 1) {\n            index = -1\n        }\n\n        let newScheduledDays = state.turns.find(\n            (worker) => worker._id === workerId\n        ).days\n\n        if (newScheduledDays === null) newScheduledDays = []\n\n        newScheduledDays[scheduleIndex] = shiftNames[index + 1]\n        scheduleService.update(year, workerId, newScheduledDays)\n\n        dispatch({ type: \"SET_TURNS\", payload: [...state.turns] })\n    }\n\n    function removeRow(idToDelete, name) {\n        let newWorkerTeam = state.turns.filter(\n            (worker) => worker._id !== idToDelete\n        )\n        const ok = window.confirm(`Remove ${name}?`)\n        if (ok) {\n            scheduleService.removeTeamMember(year, idToDelete)\n            dispatch({ type: \"SET_TURNS\", payload: [...newWorkerTeam] })\n        }\n    }\n\n    if (isPageWide) {\n        return (\n            <DesktopTable\n                isOpen={isOpen}\n                setIsOpen={setIsOpen}\n                putValuesToTable={putValuesToTable}\n            />\n        )\n    }\n\n    return (\n        <MobileTable\n            isOpen={isOpen}\n            setIsOpen={setIsOpen}\n            putValuesToTableMobile={putValuesToTableMobile}\n            removeRow={removeRow}\n        />\n    )\n}\n\nexport default Calendar\n","import styled, { css } from \"styled-components\"\n\nexport const Container = styled.div`\n    padding: 40px 0;\n    max-width: 100vw;\n`\nexport const Title = styled.h3`\n    font-size: 1.6rem;\n    color: var(--color-primary);\n    padding-bottom: 1rem;\n    @media (max-width: 800px) {\n        font-size: 1.4rem;\n        padding-left: 0.5em;\n    } ;\n`\n\nexport const Grid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 20px;\n    @media (min-width: 2100px) {\n        grid-template-columns: repeat(4, 1fr);\n    }\n    @media (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        padding: 0 0.5em;\n        gap: 10px;\n    }\n    @media (max-width: 360px) {\n        grid-template-columns: 1fr;\n    }\n`\nexport const Card = styled.div`\n    padding: 1rem;\n    background: var(--color-header-background);\n    box-shadow: 5px 5px 0 0 rgba(0 0 0 / 0.5);\n`\n\nexport const Name = styled.div`\n    font-size: 1.4rem;\n    padding-bottom: 10px;\n    color: var(--color-text);\n`\n\nexport const ShiftName = styled.div`\n    display: flex;\n    justify-content: space-between;\n    font-weight: bold;\n    font-size: 1.2rem;\n    padding-top: 15px;\n    border-bottom: 1px solid var(--color-text-light);\n    @media (max-width: 800px) {\n        font-size: 1rem;\n    }\n`\n\nexport const ColoredBlock = styled.span`\n    padding-right: 5px;\n    ${(props) => {\n        return css`\n            color: var(${props.color});\n        `\n    }}}\n`\n\nexport const Total = styled(ShiftName)`\n    border: none;\n    margin-left: auto;\n    &:before {\n        content: \"\";\n    }\n`\n","import React from \"react\"\nimport { ComponentContext } from \"../../context/turnsContext\"\nimport {\n    ShiftName,\n    Title,\n    ColoredBlock,\n    Container,\n    Name,\n    Total,\n    Grid,\n    Card,\n} from \"./block.style\"\n\nconst TotalHoursBlock = () => {\n    const { state, dispatch } = React.useContext(ComponentContext)\n\n    let totalCount = (shift, i) => {\n        if (!state.turns[i].days) return 0\n        let count = state.turns[i].days.reduce((counter, shiftPerDay) => {\n            return shiftPerDay === shift ? (counter += 1) : counter\n        }, 0)\n        let hours = state.acceptedShift.find(\n            (element) => element.shiftName === shift\n        ).hours\n        return { count, hours: count * hours }\n    }\n\n    if (!state.acceptedShift) return <div>Loading...</div>\n\n    const workLikeADonk = (index) => {\n        let total = 0\n        return [\n            state.acceptedShift.map((shift) => {\n                let { count, hours } = totalCount(shift.shiftName, index)\n                total = total + hours\n                return (\n                    <ShiftName key={shift.shiftName}>\n                        <div>\n                            <ColoredBlock color={shift.color}>▊</ColoredBlock>\n                            <span style={{ paddingRight: \"4px\" }}>\n                                {count}\n                            </span>{\" \"}\n                            {shift.shiftName}\n                        </div>\n                        <div>{hours}</div>\n                    </ShiftName>\n                )\n            }),\n            <Total key={index}>Total: {total}</Total>,\n        ]\n    }\n\n    return (\n        <Container>\n            <Title>Total hours</Title>\n            <Grid>\n                {state.turns.map((member, index) => {\n                    return (\n                        <Card key={member.name}>\n                            <Name>{member.name}</Name>\n                            {workLikeADonk(index)}\n                        </Card>\n                    )\n                })}\n            </Grid>\n        </Container>\n    )\n}\n\nexport default TotalHoursBlock\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport SideBar from \"./Sidebar\"\nimport Calendar from \"./calendar/calendar\"\nimport TotalHoursBlock from \"./statistisBlock/TotalHoursBlock\"\n\nimport teamService from \"../services/teams\"\nimport { ComponentContext } from \"../context/turnsContext\"\n\nconst StyledMain = styled.div`\n    width: 100vw;\n    display: flex;\n    @media (max-width: 800px) {\n        flex-direction: column;\n    }\n`\n\nconst Main = () => {\n    const [acceptedShift, setAcceptedShift] = React.useState()\n    const { state, dispatch } = React.useContext(ComponentContext)\n\n    React.useEffect(() => {\n        teamService.getAcceptedShift().then((data) => {\n            dispatch({ type: \"GET_SHIFT\", payload: data.acceptedShift })\n        })\n    }, [dispatch])\n\n    console.log(state)\n\n    return (\n        <StyledMain>\n            <SideBar />\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    width: \"100%\",\n                }}\n            >\n                <Calendar\n                    style={{\n                        backgroundColor: \"var(--gradient-background)\",\n                        height: \"100%\",\n                    }}\n                />\n                <TotalHoursBlock/>\n            </div>\n        </StyledMain>\n    )\n}\n\nexport default Main\n","import axios from \"axios\"\nconst baseUrl = \"/api/login\"\n\nconst login = async (credential) => {\n    const response = await axios.post(baseUrl, credential)\n    return response.data\n}\n\nexport default { login }\n","import styled, { css } from \"styled-components\"\n\nexport const NotificationStyled = styled.div`\n    position: absolute;\n    z-index: 999;\n    top: 40px;\n    border-radius: 5px;\n    padding: 10px 20px;\n    background: var(--color-background);\n    box-shadow: 0 3px 20px 2px rgba(0, 0, 0, 0.6);\n    ${(props) => {\n        switch (props.type) {\n        case \"succes\":\n            return css`\n                    color: var(--color-green);\n                    border: 1px solid var(--color-green);\n                `\n        case \"error\":\n            return css`\n                    color: var(--color-terziary);\n                    border: 1px solid var(--color-terziary);\n                `\n        }\n    }}\n`\n","import React from \"react\"\nimport { NotificationStyled } from \"./notification-style\"\n\nconst Notification = ({ notification }) => {\n    if (!notification) {\n        return null\n    }\n    return (\n        <NotificationStyled type={notification.type}>\n            {notification.message}\n        </NotificationStyled>\n    )\n}\n\nexport default Notification\n","import styled from \"styled-components\"\n\nexport const ContainerLogin = styled.div`\n    width: 100%;\n    min-height: 100vh;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 15px;\n    background: var(--color-header-background);\n`\n\nexport const WrapLogin = styled.div`\n    width: 500px;\n    background: var(--color-background);\n    border-radius: 10px;\n    overflow: hidden;\n    box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.3);\n    -moz-box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.3);\n    -webkit-box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.3);\n    -o-box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.3);\n    -ms-box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.3);\n    padding: 50px 55px 60px;\n`\n\nexport const FormLogin = styled.form`\n    width: 100%;\n`\n\nexport const FormTitle = styled.span`\n    display: block;\n    font-size: 30px;\n    color: var(--color-text);\n    line-height: 1.2;\n    text-align: center;\n    padding-bottom: 33px;\n`\n\nexport const WrapInput = styled.div`\n    width: 100%;\n    position: relative;\n    background-color: var(--color-background);\n`\n\nexport const Input = styled.input`\n    height: 68px;\n    padding: 0 25px;\n    display: block;\n    width: 100%;\n    background: 0 0;\n    font-size: 18px;\n    color: var(--color-text);\n    line-height: 1.2;\n    outline: none;\n    border: var(--color-border);\n`\n\nexport const WrapButton = styled.div`\n    width: 100%;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 20px;\n`\n\nexport const Button = styled.button`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n    align-items: center;\n    padding: 0 20px;\n    width: 100%;\n    height: 60px;\n    background-color: var(--color-primary);\n    font-size: 14px;\n    color: #fff;\n    line-height: 1.2;\n    text-transform: uppercase;\n    -webkit-transition: all 0.4s;\n    -o-transition: all 0.4s;\n    -moz-transition: all 0.4s;\n    transition: all 0.4s;\n    outline: none;\n    border: none;\n`\n\nexport const TextCenter = styled.div`\n    text-align: center;\n`\n\nexport const Link = styled.a`\n    font-size: 15px;\n    line-height: 1.4;\n    color: var(--color-primary);\n    cursor: pointer;\n`\n","import React from \"react\"\nimport loginService from \"../../services/login\"\nimport teamService from \"../../services/teams\"\nimport storage from \"../../utils/storage\"\nimport Notification from \"../notification/notification\"\nimport {\n    Input,\n    ContainerLogin,\n    WrapLogin,\n    WrapInput,\n    WrapButton,\n    FormLogin,\n    FormTitle,\n    TextCenter,\n    Link,\n    Button,\n} from \"./loginForm.styles\"\n\nconst LoginForm = ({ setUser }) => {\n    const [teamName, setTeamName] = React.useState(\"\")\n    const [password, setPassword] = React.useState(\"\")\n    const [email, setEmail] = React.useState(\"\")\n    const [notification, setNotification] = React.useState(null)\n    const [isLogin, setIsLogin] = React.useState(true)\n\n    const validEmailRegex = RegExp(\n        // eslint-disable-next-line no-useless-escape\n        /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n    )\n\n    const validateForm = () => {\n        let isValid = true\n        if (teamName.length <= 3) {\n            setNotification({\n                type: \"error\",\n                message: \"Team Name must be at least 3 characters\",\n            })\n            isValid = false\n        }\n        if (!isLogin && !validEmailRegex.test(email)) {\n            setNotification({\n                type: \"error\",\n                message: \"invalid email address\",\n            })\n            isValid = false\n        }\n        if (password.length < 8) {\n            setNotification({\n                type: \"error\",\n                message: \"password too short\",\n            })\n\n            isValid = false\n        }\n\n        setTimeout(() => {\n            setNotification(null)\n        }, 5000)\n\n        return isValid\n    }\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n\n        if (!validateForm()) return\n\n        try {\n            const team = await loginService.login({ teamName, password })\n            setUser(team)\n            storage.saveUser(team)\n        } catch (exception) {\n            setNotification({ type: \"error\", message: \"Wrong credentials\" })\n            setTimeout(() => {\n                setNotification(null)\n            }, 5000)\n        }\n    }\n\n    const handleRegister = async (event) => {\n        event.preventDefault()\n        if (!validateForm()) return\n        try {\n            await teamService.register({ teamName, email, password })\n            const team = await loginService.login({ teamName, password })\n            storage.saveUser(team)\n            setUser(team)\n        } catch (exception) {\n            setNotification({ type: \"error\", message: \"Wrong credentials\" })\n            setTimeout(() => {\n                setNotification(null)\n            }, 5000)\n        }\n    }\n\n    if (!isLogin) {\n        return (\n            <ContainerLogin>\n                <Notification notification={notification} />\n                <WrapLogin>\n                    <FormLogin onSubmit={handleRegister}>\n                        <FormTitle>Creat New Account</FormTitle>\n                        <WrapInput>\n                            <Input\n                                type=\"text\"\n                                placeholder=\"team name\"\n                                value={teamName}\n                                name=\"teamName\"\n                                onChange={({ target }) =>\n                                    setTeamName(target.value)\n                                }\n                            />\n                        </WrapInput>\n                        <WrapInput>\n                            <Input\n                                style={{ borderTop: \"none\" }}\n                                type=\"email\"\n                                placeholder=\"email\"\n                                value={email}\n                                name=\"email\"\n                                onChange={({ target }) =>\n                                    setEmail(target.value)\n                                }\n                            />\n                        </WrapInput>\n                        <WrapInput>\n                            <Input\n                                style={{ borderTop: \"none\" }}\n                                type=\"password\"\n                                value={password}\n                                name=\"password\"\n                                placeholder=\"password\"\n                                onChange={({ target }) =>\n                                    setPassword(target.value)\n                                }\n                            />\n                        </WrapInput>\n                        <WrapButton>\n                            <Button type=\"submit\">Register</Button>\n                        </WrapButton>\n                        <TextCenter style={{ paddingTop: \"45px\" }}>\n                            Whant to log-in?{\" \"}\n                            <Link onClick={() => setIsLogin(!isLogin)}>\n                                Login\n                            </Link>\n                        </TextCenter>\n                    </FormLogin>\n                </WrapLogin>\n            </ContainerLogin>\n        )\n    }\n    return (\n        <ContainerLogin>\n            <Notification notification={notification} />\n            <WrapLogin>\n                <FormLogin onSubmit={handleLogin}>\n                    <FormTitle>Account Login</FormTitle>\n                    <WrapInput>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"team name\"\n                            value={teamName}\n                            name=\"teamName\"\n                            onChange={({ target }) => setTeamName(target.value)}\n                        />\n                    </WrapInput>\n                    <WrapInput>\n                        <Input\n                            style={{ borderTop: \"none\" }}\n                            type=\"password\"\n                            value={password}\n                            name=\"password\"\n                            placeholder=\"password\"\n                            onChange={({ target }) => setPassword(target.value)}\n                        />\n                    </WrapInput>\n                    <WrapButton>\n                        <Button type=\"submit\">login</Button>\n                    </WrapButton>\n                    <TextCenter style={{ paddingTop: \"45px\" }}>\n                        Not Register yet?{\" \"}\n                        <Link onClick={() => setIsLogin(!isLogin)}>\n                            Register\n                        </Link>\n                    </TextCenter>\n                </FormLogin>\n            </WrapLogin>\n        </ContainerLogin>\n    )\n}\n\nexport default LoginForm\n","import React from \"react\"\nimport \"./index.css\"\nimport { GlobalStyles } from \"./GlobalStyles\"\n\nimport Header from \"./components/header/header\"\nimport Main from \"./components/Main\"\nimport LoginForm from \"./components/loginForm/loginForm\"\nimport { TurnsProvider } from \"./context/turnsContext\"\n\nimport useLocalStorageState from \"./hooks/useLocalStorageState\"\n\nconst StyledApp = ({ children, theme }) => {\n    return (\n        <>\n            <GlobalStyles theme={theme} />\n            {children}\n        </>\n    )\n}\n\nconst App = () => {\n    const [theme, setTheme] = useLocalStorageState(\"theme\", \"dark\")\n    const [user, setUser] = useLocalStorageState(\"loggedUser\", null)\n\n    function switchTheme(passedTheme) {\n        return setTheme(passedTheme)\n    }\n\n    return (\n        <StyledApp theme={theme}>\n            {user === null ? (\n                <LoginForm setUser={setUser} />\n            ) : (\n                <>\n                    <Header switchTheme={switchTheme} setUser={setUser} />\n                    <TurnsProvider>\n                        <Main />\n                    </TurnsProvider>\n                </>\n            )}\n        </StyledApp>\n    )\n}\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}